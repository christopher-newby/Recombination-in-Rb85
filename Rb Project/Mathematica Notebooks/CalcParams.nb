(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    217455,       4689]
NotebookOptionsPosition[    213834,       4563]
NotebookOutlinePosition[    214167,       4578]
CellTagsIndexPosition[    214124,       4575]
WindowFrame->Normal
ContainsDynamic->False*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Getting a0(\[CapitalDelta])", "Section",
 CellChangeTimes->{{3.448292649644954*^9, 3.448292659067913*^9}}],

Cell[CellGroupData[{

Cell["Potential", "Subsection",
 CellChangeTimes->{{3.448292681725775*^9, 3.448292684924975*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "k_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"1", "+", 
         FractionBox[
          SuperscriptBox["k", "2"], 
          SuperscriptBox["\[Beta]1", "2"]]}]], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       FractionBox["1", 
        RowBox[{"1", "+", 
         FractionBox[
          SuperscriptBox["k", "2"], 
          SuperscriptBox["\[Beta]2", "2"]]}]]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.448292687283476*^9, 3.448292718812695*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scattering Amplitude", "Subsection",
 CellChangeTimes->{{3.448292721822823*^9, 3.448292725142809*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G0", "[", 
     RowBox[{"En_", ",", "H_"}], "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"En", "-", "H", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Epsilon]"}]}]], ",", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        FractionBox["1", 
         RowBox[{"En", "-", "H", "-", 
          FractionBox[
           SuperscriptBox["\[Delta]", "2"], "m"], "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Epsilon]"}]}]]}], "}"}]}], "}"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Lambda]o", ",", "\[Lambda]x"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]x", ",", "\[Lambda]c"}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.44829272833555*^9, 3.448292786173475*^9}, {
  3.448297129534708*^9, 3.448297132544712*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Jmat", "[", "En_", "]"}], "=", 
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"g", "[", "q", "]"}], ".", 
         RowBox[{"G0", "[", 
          RowBox[{"En", ",", 
           FractionBox[
            SuperscriptBox["q", "2"], "m"]}], "]"}], ".", 
         RowBox[{"g", "[", "q", "]"}]}], "*", 
        FractionBox[
         RowBox[{"4", "\[Pi]", " ", 
          SuperscriptBox["q", "2"]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", "\[Pi]"}], ")"}], "3"]]}], ",", 
       RowBox[{"{", 
        RowBox[{"q", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"m", ">", "0"}], ",", 
          RowBox[{"\[Delta]", ">", "0"}], ",", 
          RowBox[{"En", "\[Element]", "Reals"}], ",", 
          RowBox[{"\[Beta]1", "\[Element]", "Reals"}], ",", 
          RowBox[{"\[Beta]2", "\[Element]", "Reals"}], ",", 
          RowBox[{"\[Beta]1", ">", "0"}], ",", 
          RowBox[{"\[Beta]2", ">", "0"}], ",", 
          RowBox[{"\[Epsilon]", ">", "0"}]}], "}"}]}]}], "]"}], ",", 
     RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.448292788772356*^9, 3.448292902029439*^9}, {
   3.448297218813333*^9, 3.44829721924004*^9}, 3.4735991832148232`*^9, {
   3.4735992513402596`*^9, 3.473599251777762*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalDelta]mat", "[", "En_", "]"}], "=", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "2", "]"}], "-", 
     RowBox[{"\[Lambda]", ".", 
      RowBox[{"Jmat", "[", "En", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Tau]", "[", "En_", "]"}], "=", 
   RowBox[{
    RowBox[{"Inverse", "[", 
     RowBox[{"\[CapitalDelta]mat", "[", "En", "]"}], "]"}], ".", 
    "\[Lambda]"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Fff", "[", "p_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["m", 
        RowBox[{"4", "\[Pi]"}]]}], 
      RowBox[{
       RowBox[{"g", "[", "p", "]"}], ".", 
       RowBox[{"\[Tau]", "[", 
        FractionBox[
         SuperscriptBox["p", "2"], "m"], "]"}], ".", 
       RowBox[{"g", "[", "p", "]"}]}]}], "/.", 
     RowBox[{
      FractionBox["1", 
       SqrtBox[
        RowBox[{"-", 
         SuperscriptBox["p", "2"]}]]], "\[Rule]", 
      FractionBox["1", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "p"}]]}]}], "/.", 
    RowBox[{
     SqrtBox[
      RowBox[{"-", 
       SuperscriptBox["p", "2"]}]], "\[Rule]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "p"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.448292914854747*^9, 3.448292982073582*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "p_", "]"}], "=", 
   RowBox[{
    RowBox[{"Fff", "[", "p", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.44829298567582*^9, 3.448292997943357*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scattering Length", "Subsection",
 CellChangeTimes->{{3.448293003080317*^9, 3.448293007795772*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ERE", "[", 
    RowBox[{"p_", ",", "\[Delta]_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Series", "[", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"f", "[", "p", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "0", ",", "4"}], "}"}]}], "]"}], "+", 
     RowBox[{"\[ImaginaryI]", " ", "p"}]}], "//", "Normal"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.448293014456676*^9, 3.44829302525241*^9}, {
  3.448297146286287*^9, 3.448297146944944*^9}, {3.4761912518335595`*^9, 
  3.4761912520991864`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p0", "[", "\[Delta]_", "]"}], "=", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{"ERE", "[", 
       RowBox[{"p", ",", "\[Delta]"}], "]"}], ",", "p", ",", "0"}], "]"}], 
    "]"}], "/.", 
   RowBox[{
    SqrtBox[
     SuperscriptBox["\[Delta]", "2"]], "\[Rule]", 
    "\[Delta]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", "[", "\[Delta]_", "]"}], "=", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{"ERE", "[", 
       RowBox[{"p", ",", "\[Delta]"}], "]"}], ",", "p", ",", "1"}], "]"}], 
    "]"}], "/.", 
   RowBox[{
    SqrtBox[
     SuperscriptBox["\[Delta]", "2"]], "\[Rule]", 
    "\[Delta]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p2", "[", "\[Delta]_", "]"}], "=", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{"ERE", "[", 
        RowBox[{"p", ",", "\[Delta]"}], "]"}], ",", "p", ",", "2"}], "]"}], 
     "]"}], "/.", 
    RowBox[{
     SqrtBox[
      SuperscriptBox["\[Delta]", "2"]], "\[Rule]", "\[Delta]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p4", "[", "\[Delta]_", "]"}], "=", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{"ERE", "[", 
        RowBox[{"p", ",", "\[Delta]"}], "]"}], ",", "p", ",", "4"}], "]"}], 
     "]"}], "/.", 
    RowBox[{
     SqrtBox[
      SuperscriptBox["\[Delta]", "2"]], "\[Rule]", "\[Delta]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.448293027930182*^9, 3.448293064004014*^9}, {
  3.448293165326278*^9, 3.448293171172023*^9}, {3.448293353046003*^9, 
  3.448293354693968*^9}, {3.448297148880729*^9, 3.448297160722192*^9}, {
  3.44829726298963*^9, 3.448297265413006*^9}, {3.44829792899666*^9, 
  3.448297933775132*^9}, {3.4761913493966837`*^9, 3.4761913495998106`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "64"}], " ", 
    SuperscriptBox["\[Pi]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Beta]2", "2"], "+", 
      RowBox[{"2", " ", "\[Beta]2", " ", "\[Delta]"}], "+", 
      SuperscriptBox["\[Delta]", "2"]}], ")"}]}], "-", 
   RowBox[{"8", " ", "m", " ", "\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Beta]2", "3"], " ", "\[Lambda]c"}], "+", 
      RowBox[{"\[Beta]1", " ", 
       SuperscriptBox["\[Beta]2", "2"], " ", "\[Lambda]o"}], "+", 
      RowBox[{
      "2", " ", "\[Beta]1", " ", "\[Beta]2", " ", "\[Delta]", " ", 
       "\[Lambda]o"}], "+", 
      RowBox[{"\[Beta]1", " ", 
       SuperscriptBox["\[Delta]", "2"], " ", "\[Lambda]o"}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["m", "2"], " ", "\[Beta]1", " ", 
    SuperscriptBox["\[Beta]2", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Lambda]c"}], " ", "\[Lambda]o"}], "+", 
      SuperscriptBox["\[Lambda]x", "2"]}], ")"}]}]}], 
  RowBox[{"2", " ", "m", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"8", " ", "\[Pi]", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Beta]2", "2"], "+", 
        RowBox[{"2", " ", "\[Beta]2", " ", "\[Delta]"}], "+", 
        SuperscriptBox["\[Delta]", "2"]}], ")"}], " ", "\[Lambda]o"}], "+", 
     RowBox[{"m", " ", 
      SuperscriptBox["\[Beta]2", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Lambda]c", " ", "\[Lambda]o"}], "-", 
        SuperscriptBox["\[Lambda]x", "2"]}], ")"}]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{
  3.448293116836023*^9, 3.448293168590186*^9, 3.44829330194229*^9, 
   3.448293355226906*^9, 3.448293843513317*^9, 3.448296975283182*^9, 
   3.448297161606628*^9, {3.448297245456767*^9, 3.448297266364105*^9}, 
   3.448297934651015*^9, 3.448367644472123*^9, 3.448371588069379*^9, 
   3.448624406632488*^9, 3.448625552116303*^9, 3.448630651680897*^9, 
   3.448631820446527*^9, 3.448633233332533*^9, 3.448648436986291*^9, 
   3.448714777471404*^9, 3.4731721300176497`*^9, 3.4736009310779696`*^9, 
   3.474736312781974*^9, 3.474741233016827*^9, 3.4747415741305685`*^9, 
   3.4749808071712704`*^9, 3.475248821457986*^9, 3.476018244820563*^9, 
   3.476191205942641*^9, 3.4761912560523367`*^9, 3.4765401167003317`*^9, 
   3.4765579092294416`*^9, 3.4766247342426434`*^9, 3.477146214352335*^9, 
   3.477159198607916*^9, 3.4772266192703686`*^9, 3.477399593615156*^9, 
   3.4776722593272333`*^9, 3.4776725671709833`*^9, 3.4776726730147333`*^9, 
   3.477675421668614*^9, 3.477844628107646*^9, 3.477846911343904*^9, 
   3.479572448398267*^9, 3.479578614728409*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.448293116836023*^9, 3.448293168590186*^9, 3.44829330194229*^9, 
   3.448293355226906*^9, 3.448293843513317*^9, 3.448296975283182*^9, 
   3.448297161606628*^9, {3.448297245456767*^9, 3.448297266364105*^9}, 
   3.448297934651015*^9, 3.448367644472123*^9, 3.448371588069379*^9, 
   3.448624406632488*^9, 3.448625552116303*^9, 3.448630651680897*^9, 
   3.448631820446527*^9, 3.448633233332533*^9, 3.448648436986291*^9, 
   3.448714777471404*^9, 3.4731721300176497`*^9, 3.4736009310779696`*^9, 
   3.474736312781974*^9, 3.474741233016827*^9, 3.4747415741305685`*^9, 
   3.4749808071712704`*^9, 3.475248821457986*^9, 3.476018244820563*^9, 
   3.476191205942641*^9, 3.4761912560523367`*^9, 3.4765401167003317`*^9, 
   3.4765579092294416`*^9, 3.4766247342426434`*^9, 3.477146214352335*^9, 
   3.477159198607916*^9, 3.4772266192703686`*^9, 3.477399593615156*^9, 
   3.4776722593272333`*^9, 3.4776725671709833`*^9, 3.4776726730147333`*^9, 
   3.477675421668614*^9, 3.477844628107646*^9, 3.477846911343904*^9, 
   3.479572448398267*^9, 3.47957861477327*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a0", "[", "\[Delta]_", "]"}], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"-", "1"}], "/", 
    RowBox[{"p0", "[", "\[Delta]", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.448293070682336*^9, 3.448293100742503*^9}, {
   3.448293291869256*^9, 3.448293310939514*^9}, 3.448293351813148*^9, {
   3.448297174237243*^9, 3.448297176323006*^9}, 3.448371614657243*^9, {
   3.448371705236453*^9, 3.44837170938319*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "m", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"8", " ", "\[Pi]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[Beta]2", "+", "\[Delta]"}], ")"}], "2"], " ", 
      "\[Lambda]o"}], "+", 
     RowBox[{"m", " ", 
      SuperscriptBox["\[Beta]2", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Lambda]c", " ", "\[Lambda]o"}], "-", 
        SuperscriptBox["\[Lambda]x", "2"]}], ")"}]}]}], ")"}]}], 
  RowBox[{
   RowBox[{"64", " ", 
    SuperscriptBox["\[Pi]", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[Beta]2", "+", "\[Delta]"}], ")"}], "2"]}], "+", 
   RowBox[{"8", " ", "m", " ", "\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Beta]2", "3"], " ", "\[Lambda]c"}], "+", 
      RowBox[{"\[Beta]1", " ", 
       SuperscriptBox["\[Beta]2", "2"], " ", "\[Lambda]o"}], "+", 
      RowBox[{
      "2", " ", "\[Beta]1", " ", "\[Beta]2", " ", "\[Delta]", " ", 
       "\[Lambda]o"}], "+", 
      RowBox[{"\[Beta]1", " ", 
       SuperscriptBox["\[Delta]", "2"], " ", "\[Lambda]o"}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["m", "2"], " ", "\[Beta]1", " ", 
    SuperscriptBox["\[Beta]2", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Lambda]c", " ", "\[Lambda]o"}], "-", 
      SuperscriptBox["\[Lambda]x", "2"]}], ")"}]}]}]]], "Output",
 CellChangeTimes->{3.448371615950079*^9, 3.4483717099965982`*^9, 
  3.448624406753298*^9, 3.44862555225167*^9, 3.448630651801624*^9, 
  3.448631820596979*^9, 3.448633233439047*^9, 3.448648437079668*^9, 
  3.448714777548129*^9, 3.473172131361408*^9, 3.4736009311560955`*^9, 
  3.474736312875725*^9, 3.474741233032452*^9, 3.4747415741774435`*^9, 
  3.474980807233771*^9, 3.4752488215517373`*^9, 3.4760182449143147`*^9, 
  3.4761912060051413`*^9, 3.476540120372277*^9, 3.4765579129482627`*^9, 
  3.4766247379763975`*^9, 3.4771462181024065`*^9, 3.477159202108662*^9, 
  3.477226622942314*^9, 3.477399597098278*^9, 3.4776722630928583`*^9, 
  3.4776725708897333`*^9, 3.4776726767491083`*^9, 3.477675425167557*^9, 
  3.477844631633363*^9, 3.477846914869393*^9, 3.479572451927026*^9, 
  3.479578619331072*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a0", "[", "\[Delta]", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]x", "\[Rule]", "1"}], ",", 
      RowBox[{"\[Lambda]o", "\[Rule]", 
       RowBox[{"-", "1"}]}], ",", 
      RowBox[{"\[Lambda]c", "\[Rule]", 
       RowBox[{"-", "10"}]}], ",", 
      RowBox[{"\[Beta]1", "\[Rule]", "1"}], ",", 
      RowBox[{"\[Beta]2", "\[Rule]", "1"}], ",", 
      RowBox[{"m", "\[Rule]", 
       RowBox[{"4", "\[Pi]"}]}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Delta]", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10"}], ",", "10"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.448297194222394*^9, 3.4482971946009*^9}, {
  3.448298267970617*^9, 3.448298290212322*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwdVHk01P3/tWepbFmyU8jyiOjRQq9PhKhkT0JS2cqWerK02rJNlmghRSg8
lqR6jMobSbJliZBtMIyxzfIxM5Xl2+93z7nnnnvuOfeve66qd7DDeR4uLq6W
P/w/zb3hLWBwLuqAV1Ck4d1JDmrqVTl6QuUkFMZfV7Sb4KD15roYFRV/4Ik0
kRcncVBuPUGZXyUCXlxdtk0b5aCLplcC2cqJEPjcOTpmkIN6f/tl0pQfwdOQ
vkCTrxy04ceE5oJyCZReaepgEDkov/Vp6JwyEb64GXGZpXAQ/vCN9lgKEQJK
dok+S+IgS9+2yZ6fRMhv1/nMlchB87xs59reWpAnjevWxnHQHlPbfYl33kOK
5MtShZsc1FW5wqO5hIAFaYeehnLQzVZdG4PTH0FKK0Y/3ZmDKioTf1zUa4X/
Nr2a65HlIKoENcXmTCt87UvpZkpzkOY/Ngd2ZLZCkeLkbkkpDsozEcmf/NkK
5TR62DFxDsr4kuLj9qkNLr4rz64U4qB/JlPpVu4dkLeX10jrFxs9FWmLEbfo
gtYb65rTg2zkC92P5i/1At3Jyn1bJhtxPWPV/kjuhdlmKe6JdDZ6yKcw3FrY
CzEdpz8+SWWjli8+SiX9vbBeofZQIpmNdjitPDu/7xso/PvdavI2G1H8NMtG
uftgZI2XpBHMRgEZ1+u60vohdiPVTvMwG/EsPxtDJf3Aa/j6fJEFG2WfaOGq
bOyHnSZ+x1XN2ahVQdKcgPdDoWX8A4kDbKTzoviztet3OPE5pnrIkI3m3/V2
NSoPQG+Cw7c1JTYKImtNvq4YhAZD/qIYJguNew4KNnwZhJQsYadIGgs5DiTo
dUwNgtal65uCFlhoT9tMBFluCDZ/56QenWEh3qoiMek7Q2Dc1H2WPMRCD6+p
Hrh6+gd8sdlbHd3AQg2SWx/tFRuBr2N/EY+lsJARoaXOQmcE6u53JY8ksNBz
gfApe8sRiL4ZOuwfx0IpP/t3BlwbgRRL0uTVGyzkMpbZnE0ZAZTesuYXwkLU
UjH8d/0o6JkOj2Y7spCwaqzm2J5xICxsx6VlWKjFJH3nDYtxGJBRMAmWZKF4
1yfGig7jwE/nDH0UZSGetBqrUxfGwU6jV9BbkIV+rc37fs8dh+9BixmhP5fR
3LBz8VceEmhcyK0YGFpG7Q81terbSbBiSzd9mr2Mkl4bGZweJMGrW5+eX72/
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
yvNJKW7Dku3PUc2Zf3b5/9iO/Q8t5aET
     "]], LineBox[CompressedData["
1:eJwdzgk01dsXB/B77+9e83ANDYZCZAoNryKqc1BShnoZy0yISiShqB6FRIaE
lKFk6kUq9ETsJEmGNCpjZYr0xOtOLvf/63/W2uuszzp77/NV8z6615dGoVC6
yfp9P/5MVfzixkKU/x8NOOVy7mSpOwtZLN/t0jGtDjFq8w6zB1jIfkxpwiVK
HVLLf0hcCGGha2lBFurFKyAr1H/8TTgLPVYcC/ExXwF5m4aeLj/NQlK2hgNF
I2pw51n3yapEFkqxdVdrMFSDBxd3OQpSWUj+Ya7e9KgqPPrz6dpdWSx04MCL
/k9XVaG1v2p8sJCFBEM/swZEVaGrUL9Z9zYL1RwzaZRKVoH3AcX5YZUstKPd
yVpKQgWGf2U5ij9moUn3mKM1Csvhpukfof1PWeiBkivhk7cMPJI7U+62sdAP
y85tW7WXwScNxgu7HhZ6tp3+Fe1ShuzggpGVgyz0sbKs8N1nJXCsN6FxRljI
0XNxfni0EnTbHTO5PstCeokluzmNinApX9I5iMdCKv1qpUf8FMF6svQ4prLR
tr1nGpSYitAaM1g+LMVG1F+ZTicOK0DDPWtVfV02Wrn4XqvU9qUQNT+2WbCG
jSymFQ8pUZfCpp2x+7oN2Sjhm+c2q8YlUDVUmx62nY1iDS3OVZougdvSWowG
TzZat8lo2UrXxXDQpUkt1Z+NZB0lNN9oLoaVJW5bvYPI/yoPFi/MLIKCrRnh
QlFslP3xc19KyiLIOkKdsM1iIy2h1X/L98iDfe11IbU8Nho6dclarVweZBlG
6rO32Ei0Z9rNLFYeLl0Pcs26z0b+tvt1r66Th3MvezsHO9hI4ajv8azrcmC2
JHzy3ls2cn26/pFppBwIvGVFzvWy0dWD4ncfOcrBSZ6lqfY3NlojO8Dmy8lB
sE7Ng2A6B00PlL2RyZIFg7A/X5mJc9D9ra7c6EhZmITv3+VlOWjZeo/yBFdZ
8HNW16xV4aAVpt9M/TRkwS0+NZtqwkFOKn/5NT+SgV0jgdHpIRz0cTrlYukC
Eyyi1e9si+AgwYj93dBvTDBb1PeJdZqD9gwrn857ywTj7TZGLkkcdF7YbrXo
HSboFq2eVS/hoIVviiIz7kzQ3DKu9r6cgx6OptAjrZmw4l3BnoQqDoorzx+0
MWaCIkO24vsTDho53n7z42ImiPv+d7C6j4M2OucnpxRLg8j8nSz/rxwUP2Hg
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
5Axp+1JLw99umNXkCkiHuvQkWpH+H39XRd0=
     "]], 
    LineBox[{{1.3449956010995425`, 10.}, {1.3450228239152293`, -10.}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 5}, {-10, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.448297246010706*^9, 3.448297268760942*^9}, 
   3.448297939694446*^9, {3.448298268398021*^9, 3.448298290601712*^9}, 
   3.448367644673014*^9, 3.448371588547739*^9, 3.448624406948803*^9, 
   3.448625552420212*^9, 3.448630652049028*^9, 3.448631820811169*^9, 
   3.448633233579485*^9, 3.448648437230843*^9, 3.448714777775059*^9, 
   3.4731721329864187`*^9, 3.473600931421722*^9, 3.4747363129851017`*^9, 
   3.474741233094953*^9, 3.4747415742555695`*^9, 3.4749808076556487`*^9, 
   3.4752488216611147`*^9, 3.4760182453205724`*^9, 3.476191206177017*^9, 
   3.476540120731659*^9, 3.476557913026389*^9, 3.476624738085754*^9, 
   3.477146218493039*^9, 3.477159202181312*^9, 3.477226623051691*^9, 
   3.477399597218276*^9, 3.4776722632022333`*^9, 3.4776725709834833`*^9, 
   3.4776726768272333`*^9, 3.477675425268558*^9, 3.477844631695925*^9, 
   3.477846914940687*^9, 3.479572452025486*^9, 3.479578619397071*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[Delta]soln1", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Denominator", "[", 
       RowBox[{"a0", "[", "\[Delta]", "]"}], "]"}], "\[Equal]", "0"}], ",", 
     "\[Delta]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]soln2", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Denominator", "[", 
       RowBox[{"a0", "[", "\[Delta]", "]"}], "]"}], "\[Equal]", "0"}], ",", 
     "\[Delta]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.448625481423375*^9, 3.448625512259916*^9}, {
  3.44862610604874*^9, 3.448626126939498*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Delta]", "\[Rule]", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "32"}], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", "\[Beta]2"}], "-", 
     RowBox[{
     "4", " ", "m", " ", "\[Pi]", " ", "\[Beta]1", " ", "\[Beta]2", " ", 
      "\[Lambda]o"}], "-", 
     RowBox[{
      SqrtBox["2"], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "64"}], " ", "m", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox["\[Beta]2", "3"], " ", "\[Lambda]c"}], "-", 
        RowBox[{"16", " ", 
         SuperscriptBox["m", "2"], " ", 
         SuperscriptBox["\[Pi]", "2"], " ", "\[Beta]1", " ", 
         SuperscriptBox["\[Beta]2", "3"], " ", "\[Lambda]c", " ", 
         "\[Lambda]o"}], "-", 
        RowBox[{
         SuperscriptBox["m", "3"], " ", "\[Pi]", " ", 
         SuperscriptBox["\[Beta]1", "2"], " ", 
         SuperscriptBox["\[Beta]2", "3"], " ", "\[Lambda]c", " ", 
         SuperscriptBox["\[Lambda]o", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["m", "2"], " ", 
         SuperscriptBox["\[Pi]", "2"], " ", "\[Beta]1", " ", 
         SuperscriptBox["\[Beta]2", "3"], " ", 
         SuperscriptBox["\[Lambda]x", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["m", "3"], " ", "\[Pi]", " ", 
         SuperscriptBox["\[Beta]1", "2"], " ", 
         SuperscriptBox["\[Beta]2", "3"], " ", "\[Lambda]o", " ", 
         SuperscriptBox["\[Lambda]x", "2"]}]}]]}]}], 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"8", " ", 
        SuperscriptBox["\[Pi]", "2"]}], "+", 
       RowBox[{"m", " ", "\[Pi]", " ", "\[Beta]1", " ", "\[Lambda]o"}]}], 
      ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.448625512864793*^9, 3.448625552607702*^9, {3.448626114609425*^9, 
   3.448626130869648*^9}, 3.448630652127695*^9, 3.44863182085422*^9, 
   3.448633233599067*^9, 3.448648437344185*^9, 3.448714777801212*^9, 
   3.473172135236433*^9, 3.4736009314842224`*^9, 3.474736313047602*^9, 
   3.4747412331105785`*^9, 3.474741574271195*^9, 3.4749808076868987`*^9, 
   3.4752488217236156`*^9, 3.4760182453674483`*^9, 3.4761912062238927`*^9, 
   3.476540120747284*^9, 3.4765579130420146`*^9, 3.476624738148244*^9, 
   3.47714621852429*^9, 3.477159202228615*^9, 3.477226623114192*^9, 
   3.47739959722831*^9, 3.4776722632647333`*^9, 3.4776725709834833`*^9, 
   3.4776726768428583`*^9, 3.477675425278174*^9, 3.477844631718592*^9, 
   3.47784691494898*^9, 3.479572452036205*^9, 3.479578619407487*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Delta]", "\[Rule]", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "32"}], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", "\[Beta]2"}], "-", 
     RowBox[{
     "4", " ", "m", " ", "\[Pi]", " ", "\[Beta]1", " ", "\[Beta]2", " ", 
      "\[Lambda]o"}], "+", 
     RowBox[{
      SqrtBox["2"], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "64"}], " ", "m", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox["\[Beta]2", "3"], " ", "\[Lambda]c"}], "-", 
        RowBox[{"16", " ", 
         SuperscriptBox["m", "2"], " ", 
         SuperscriptBox["\[Pi]", "2"], " ", "\[Beta]1", " ", 
         SuperscriptBox["\[Beta]2", "3"], " ", "\[Lambda]c", " ", 
         "\[Lambda]o"}], "-", 
        RowBox[{
         SuperscriptBox["m", "3"], " ", "\[Pi]", " ", 
         SuperscriptBox["\[Beta]1", "2"], " ", 
         SuperscriptBox["\[Beta]2", "3"], " ", "\[Lambda]c", " ", 
         SuperscriptBox["\[Lambda]o", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["m", "2"], " ", 
         SuperscriptBox["\[Pi]", "2"], " ", "\[Beta]1", " ", 
         SuperscriptBox["\[Beta]2", "3"], " ", 
         SuperscriptBox["\[Lambda]x", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["m", "3"], " ", "\[Pi]", " ", 
         SuperscriptBox["\[Beta]1", "2"], " ", 
         SuperscriptBox["\[Beta]2", "3"], " ", "\[Lambda]o", " ", 
         SuperscriptBox["\[Lambda]x", "2"]}]}]]}]}], 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"8", " ", 
        SuperscriptBox["\[Pi]", "2"]}], "+", 
       RowBox[{"m", " ", "\[Pi]", " ", "\[Beta]1", " ", "\[Lambda]o"}]}], 
      ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.448625512864793*^9, 3.448625552607702*^9, {3.448626114609425*^9, 
   3.448626130869648*^9}, 3.448630652127695*^9, 3.44863182085422*^9, 
   3.448633233599067*^9, 3.448648437344185*^9, 3.448714777801212*^9, 
   3.473172135236433*^9, 3.4736009314842224`*^9, 3.474736313047602*^9, 
   3.4747412331105785`*^9, 3.474741574271195*^9, 3.4749808076868987`*^9, 
   3.4752488217236156`*^9, 3.4760182453674483`*^9, 3.4761912062238927`*^9, 
   3.476540120747284*^9, 3.4765579130420146`*^9, 3.476624738148244*^9, 
   3.47714621852429*^9, 3.477159202228615*^9, 3.477226623114192*^9, 
   3.47739959722831*^9, 3.4776722632647333`*^9, 3.4776725709834833`*^9, 
   3.4776726768428583`*^9, 3.477675425278174*^9, 3.477844631718592*^9, 
   3.47784691494898*^9, 3.479572452036205*^9, 3.47957861941549*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"r0", "[", "\[Delta]_", "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"p2", "[", "\[Delta]", "]"}], "*", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v4", "[", "\[Delta]_", "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"p4", "[", "\[Delta]", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.476191659945546*^9, 3.4761917229772*^9}, 
   3.4761917884463687`*^9, {3.476540092652995*^9, 3.4765400935280113`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Looping through mag field", "Section",
 CellChangeTimes->{{3.448293373578292*^9, 3.448293379421014*^9}}],

Cell[CellGroupData[{

Cell["Constants", "Subsection",
 CellChangeTimes->{{3.448293382886711*^9, 3.448293384077171*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[HBar]c", "=", "197.3269631"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cLight", "=", 
   RowBox[{"2.99792458", "*", 
    SuperscriptBox["10", "17"]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[HBar]Plank", "=", 
   RowBox[{"2", " ", "\[Pi]", " ", 
    RowBox[{"\[HBar]c", "/", "cLight"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Mu]Bohr", "=", 
   RowBox[{"5.7883817555", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "5"}]]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Mu]e", "=", 
   RowBox[{"1.00115965218111", " ", "\[Mu]Bohr"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"aBohr", "=", "0.052917720859"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ehf", "=", 
   RowBox[{"3.035732439", "*", 
    SuperscriptBox["10", "9"], " ", "\[HBar]Plank"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Bhf", "=", 
    RowBox[{
     RowBox[{"Ehf", "/", "\[Mu]e"}], " ", 
     SuperscriptBox["10", "4"]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mRb", "=", 
   RowBox[{"84.911789738", "*", "931.494028", "*", 
    SuperscriptBox["10", "6"]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.448293395717986*^9, 3.448293406149614*^9}, {
   3.448295014082543*^9, 3.448295039888398*^9}, {3.448297406026269*^9, 
   3.448297407733284*^9}, {3.448367727521165*^9, 3.44836774912878*^9}, {
   3.448371845084309*^9, 3.4483718472337646`*^9}, {3.448371976660165*^9, 
   3.4483719841753197`*^9}, 3.448372382907909*^9, 3.448624382381294*^9, {
   3.4761914527879705`*^9, 3.476191453006722*^9}, {3.476191556804261*^9, 
   3.476191557601142*^9}, {3.4772264873459606`*^9, 3.477226523206024*^9}, {
   3.477226774882731*^9, 3.4772267921018114`*^9}, {3.4772320426713076`*^9, 
   3.4772320478276567`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Hyperfine and Zeeman", "Subsection",
 CellChangeTimes->{{3.448293419684935*^9, 3.448293422982999*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Hhf", "[", 
    RowBox[{"i_", ",", "s_", ",", "f_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"f", " ", 
       RowBox[{"(", 
        RowBox[{"f", "+", "1"}], ")"}]}], "-", 
      RowBox[{"i", " ", 
       RowBox[{"(", 
        RowBox[{"i", "+", "1"}], ")"}]}], "-", 
      RowBox[{"s", " ", 
       RowBox[{"(", 
        RowBox[{"s", "+", "1"}], ")"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "i"}], "+", "1"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sz", "[", 
    RowBox[{"i_", ",", "s_", ",", "finit_", ",", "m_", ",", "ffin_"}], "]"}], 
   ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"ffin", "+", "s", "+", "i", "+", "1"}], ")"}]}], " ", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "s"}], "+", "1"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "finit"}], "+", "1"}], ")"}]}], "]"}], 
    RowBox[{"SixJSymbol", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "s", ",", "finit"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "ffin", ",", "s"}], "}"}]}], "]"}], 
    RowBox[{"ClebschGordan", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"finit", ",", "m"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ffin", ",", "m"}], "}"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.448293430173127*^9, 3.44829344685415*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["other stuff \[Gamma]", "Subsection",
 CellChangeTimes->{{3.4776722873116083`*^9, 3.4776722955772333`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "k_", "]"}], "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     FractionBox[
      SuperscriptBox["k", "2"], 
      SuperscriptBox["\[Beta]2", "2"]]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"G0", "[", 
    RowBox[{"En_", ",", "H_"}], "]"}], "=", 
   FractionBox["1", 
    RowBox[{"En", "-", "H"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]", "=", "\[Lambda]c"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hmat", "[", "En_", "]"}], "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"g", "[", "q", "]"}], 
      RowBox[{"G0", "[", 
       RowBox[{"En", ",", 
        FractionBox[
         SuperscriptBox["q", "2"], "m"]}], "]"}], 
      RowBox[{"g", "[", "q", "]"}], "*", 
      FractionBox[
       RowBox[{"4", "\[Pi]", " ", 
        SuperscriptBox["q", "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", "\[Pi]"}], ")"}], "3"]]}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"m", ">", "0"}], ",", 
        RowBox[{
         RowBox[{"Im", "[", 
          SqrtBox["En"], "]"}], ">", "0"}], ",", 
        RowBox[{"\[Beta]2", "\[Element]", "Reals"}], ",", 
        RowBox[{"\[Beta]2", ">", "0"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hnew", "[", "\[Gamma]_", "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"hmat", "[", "En", "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"En", "\[Rule]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Gamma]", "2"]}], "/", "m"}]}], "}"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      SqrtBox[
       RowBox[{"-", 
        SuperscriptBox["\[Gamma]", "2"]}]], "\[Rule]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Gamma]"}]}], "}"}]}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Gamma]soln", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1", "/", "\[Lambda]"}], "-", 
       RowBox[{"hnew", "[", "\[Gamma]", "]"}]}], ")"}], "\[Equal]", "0"}], 
    ",", "\[Gamma]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.4776723006084833`*^9, 3.4776723053116083`*^9}, {
  3.4776725107334833`*^9, 3.4776725459366083`*^9}, {3.4776726329834833`*^9, 
  3.4776726586866083`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"m", " ", 
    SuperscriptBox["\[Beta]2", "3"]}], 
   RowBox[{"8", " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[Beta]2", "+", "\[Gamma]"}], ")"}], "2"]}]]}]], "Output",
 CellChangeTimes->{{3.4776725478741083`*^9, 3.4776725719991083`*^9}, 
   3.4776726779053583`*^9, 3.477675426355445*^9, 3.477844632777426*^9, 
   3.477846916030921*^9, 3.479572453168408*^9, 3.47957862066732*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Gamma]", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", "\[Pi]", " ", "\[Beta]2"}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["m"], " ", 
        SqrtBox[
         RowBox[{"2", " ", "\[Pi]"}]], " ", 
        SuperscriptBox["\[Beta]2", 
         RowBox[{"3", "/", "2"}]], " ", 
        SqrtBox["\[Lambda]c"]}]}], 
      RowBox[{"4", " ", "\[Pi]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Gamma]", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", "\[Pi]", " ", "\[Beta]2"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["m"], " ", 
        SqrtBox[
         RowBox[{"2", " ", "\[Pi]"}]], " ", 
        SuperscriptBox["\[Beta]2", 
         RowBox[{"3", "/", "2"}]], " ", 
        SqrtBox["\[Lambda]c"]}]}], 
      RowBox[{"4", " ", "\[Pi]"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.4776725478741083`*^9, 3.4776725719991083`*^9}, 
   3.4776726779053583`*^9, 3.477675426355445*^9, 3.477844632777426*^9, 
   3.477846916030921*^9, 3.479572453168408*^9, 3.479578620683576*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Actual Loop", "Subsection",
 CellChangeTimes->{{3.448293451852315*^9, 3.448293455320416*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "alist", ",", "rlist", ",", "v4list", ",", "\[Delta]alist", ",", 
    "\[Delta]blist", ",", "\[Delta]clist", ",", "\[Delta]dlist", ",", 
    "\[Gamma]list"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alist", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rlist", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v4list", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]alist", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]blist", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]clist", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]dlist", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]list", "=", 
    RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Rho]B", "=", 
      RowBox[{"2", "*", 
       RowBox[{"Bfield", "/", "Bhf"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Single", " ", "Atom", " ", "Stuff"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"H33", "=", 
      RowBox[{
       RowBox[{"Hhf", "[", 
        RowBox[{
         RowBox[{"5", "/", "2"}], ",", 
         RowBox[{"1", "/", "2"}], ",", "3"}], "]"}], "+", 
       RowBox[{"\[Rho]B", "*", 
        RowBox[{"Sz", "[", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{"1", "/", "2"}], ",", "3", ",", 
          RowBox[{"-", "3"}], ",", "3"}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Hm3", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "H33"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"e3", "=", 
      RowBox[{"Eigenvalues", "[", "Hm3", "]"}]}], ";", "\n", 
     "\[IndentingNewLine]", 
     RowBox[{"H22", "=", 
      RowBox[{
       RowBox[{"Hhf", "[", 
        RowBox[{
         RowBox[{"5", "/", "2"}], ",", 
         RowBox[{"1", "/", "2"}], ",", "2"}], "]"}], "+", 
       RowBox[{"\[Rho]B", "*", 
        RowBox[{"Sz", "[", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{"1", "/", "2"}], ",", "2", ",", 
          RowBox[{"-", "2"}], ",", "2"}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"H23", "=", 
      RowBox[{"\[Rho]B", "*", 
       RowBox[{"Sz", "[", 
        RowBox[{
         RowBox[{"5", "/", "2"}], ",", 
         RowBox[{"1", "/", "2"}], ",", "2", ",", 
         RowBox[{"-", "2"}], ",", "3"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"H32", "=", "H23"}], ";", "\[IndentingNewLine]", 
     RowBox[{"H33", "=", 
      RowBox[{
       RowBox[{"Hhf", "[", 
        RowBox[{
         RowBox[{"5", "/", "2"}], ",", 
         RowBox[{"1", "/", "2"}], ",", "3"}], "]"}], "+", 
       RowBox[{"\[Rho]B", "*", 
        RowBox[{"Sz", "[", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{"1", "/", "2"}], ",", "3", ",", 
          RowBox[{"-", "2"}], ",", "3"}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Hm2", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"H22", ",", "H23"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"H32", ",", "H33"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"C3", "=", "H23"}], ";", "\[IndentingNewLine]", 
     RowBox[{"C2", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"H22", "-", "H33"}], ")"}], "/", "2"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2", "=", 
      RowBox[{"ArcTan", "[", 
       RowBox[{"C3", "/", "C2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e2", "=", 
      RowBox[{"Eigenvalues", "[", "Hm2", "]"}]}], ";", "\n", 
     "\[IndentingNewLine]", 
     RowBox[{"H22", "=", 
      RowBox[{
       RowBox[{"Hhf", "[", 
        RowBox[{
         RowBox[{"5", "/", "2"}], ",", 
         RowBox[{"1", "/", "2"}], ",", "2"}], "]"}], "+", 
       RowBox[{"\[Rho]B", "*", 
        RowBox[{"Sz", "[", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{"1", "/", "2"}], ",", "2", ",", 
          RowBox[{"-", "1"}], ",", "2"}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"H23", "=", 
      RowBox[{"\[Rho]B", "*", 
       RowBox[{"Sz", "[", 
        RowBox[{
         RowBox[{"5", "/", "2"}], ",", 
         RowBox[{"1", "/", "2"}], ",", "2", ",", 
         RowBox[{"-", "1"}], ",", "3"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"H32", "=", "H23"}], ";", "\[IndentingNewLine]", 
     RowBox[{"H33", "=", 
      RowBox[{
       RowBox[{"Hhf", "[", 
        RowBox[{
         RowBox[{"5", "/", "2"}], ",", 
         RowBox[{"1", "/", "2"}], ",", "3"}], "]"}], "+", 
       RowBox[{"\[Rho]B", "*", 
        RowBox[{"Sz", "[", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{"1", "/", "2"}], ",", "3", ",", 
          RowBox[{"-", "1"}], ",", "3"}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Hm1", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"H22", ",", "H23"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"H32", ",", "H33"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"C3", "=", "H23"}], ";", "\[IndentingNewLine]", 
     RowBox[{"C2", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"H22", "-", "H33"}], ")"}], "/", "2"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]1", "=", 
      RowBox[{"ArcTan", "[", 
       RowBox[{"C3", "/", "C2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e1", "=", 
      RowBox[{"Eigenvalues", "[", "Hm1", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Calculating", " ", "the", " ", 
       RowBox[{"\[CapitalDelta]", "'"}], "s"}], "*)"}], "\[IndentingNewLine]",
      
     RowBox[{"Ebot", "=", 
      RowBox[{
       RowBox[{"e2", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "+", 
       RowBox[{"e2", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]o", "=", 
      RowBox[{
       RowBox[{"e2", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "+", 
       RowBox[{"e2", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "-", "Ebot"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]a", "=", 
      RowBox[{
       RowBox[{"e3", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "+", 
       RowBox[{"e1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "-", "Ebot"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]b", "=", 
      RowBox[{
       RowBox[{"e2", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "+", 
       RowBox[{"e2", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", "Ebot"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]c", "=", 
      RowBox[{
       RowBox[{"e3", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "+", 
       RowBox[{"e1", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", "Ebot"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]d", "=", 
      RowBox[{
       RowBox[{"e2", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "+", 
       RowBox[{"e2", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", "Ebot"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Calculating", " ", "the", " ", "projection", " ", "matrices"}],
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Aa", "=", 
      RowBox[{"ClebschGordan", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "5"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"1", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Bb", "=", 
      RowBox[{"ClebschGordan", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "3"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Cc", "=", 
      RowBox[{"ClebschGordan", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "5"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"1", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Dd", "=", 
      RowBox[{"ClebschGordan", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "3"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Ee", "=", 
      RowBox[{"ClebschGordan", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "3"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"1", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Ff", "=", 
      RowBox[{"ClebschGordan", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Gg", "=", 
      RowBox[{"ClebschGordan", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "5"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"-", "3"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Hh", "=", 
      RowBox[{"ClebschGordan", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "3"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"1", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Ii", "=", 
      RowBox[{"ClebschGordan", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Ss", "=", 
      RowBox[{"ClebschGordan", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"1", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"S1", "=", 
      RowBox[{"ClebschGordan", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"1", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S2", "=", 
      RowBox[{"ClebschGordan", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"1", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";", "\n", 
     "\[IndentingNewLine]", 
     RowBox[{"Jj", "=", 
      RowBox[{"ClebschGordan", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "5"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "3"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", 
          RowBox[{"-", "4"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Kk", "=", 
      RowBox[{"ClebschGordan", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "5"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "3"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", 
          RowBox[{"-", "4"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Ll", "=", 
      RowBox[{"ClebschGordan", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "3"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "5"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", 
          RowBox[{"-", "4"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Mm", "=", 
      RowBox[{"ClebschGordan", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "3"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "5"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", 
          RowBox[{"-", "4"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"OChan", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]2", "/", "2"}], "]"}], "^", "2"}], " ", "Aa", 
          " ", "Bb", " ", "Ss"}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]2", "/", "2"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]2", "/", "2"}], "]"}], " ", "Ss", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Aa", " ", "Dd"}], "+", 
            RowBox[{"Cc", " ", "Bb"}]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]2", "/", "2"}], "]"}], "^", "2"}], " ", "Cc", 
          " ", "Dd", " ", "Ss"}]}], ")"}], " ", "Jj"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"aChan", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "/", "2"}], "]"}], " ", "Ee", " ", "Gg", " ", 
        "Ss"}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "/", "2"}], "]"}], " ", "Hh", " ", "Gg", " ", 
        "Ss"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"bChan", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"2", "/", 
          RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"S1", " ", "Jj", " ", "Aa", " ", "Dd"}], "+", 
            RowBox[{"S2", " ", "Ll", " ", "Bb", " ", "Cc"}]}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]2", "/", "2"}], "]"}], "^", "2"}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]2", "/", "2"}], "]"}], "^", "2"}]}], ")"}]}], 
         "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"S1", " ", "Jj"}], "+", 
            RowBox[{"S2", " ", "Ll"}]}], ")"}], "*", "2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "/", "2"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "/", "2"}], "]"}], " ", "Aa", " ", "Cc"}], 
           ")"}]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cChan", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "/", "2"}], "]"}]}], " ", "Hh", " ", "Gg", " ",
         "Ss"}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "/", "2"}], "]"}], " ", "Ee", " ", "Gg", " ", 
        "Ss"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dChan", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]2", "/", "2"}], "]"}], "^", "2"}], " ", "Cc", 
          " ", "Dd", " ", "Ss"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]2", "/", "2"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]2", "/", "2"}], "]"}], " ", "Ss", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Aa", " ", "Dd"}], "+", 
            RowBox[{"Cc", " ", "Bb"}]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]2", "/", "2"}], "]"}], "^", "2"}], " ", "Aa", 
          " ", "Bb", " ", "Ss"}]}], ")"}], " ", "Jj"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"P11", "=", 
      RowBox[{"OChan", "^", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"P22", "=", 
      RowBox[{"aChan", "^", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"P33", "=", 
      RowBox[{"bChan", "^", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"P44", "=", 
      RowBox[{"cChan", "^", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"P55", "=", 
      RowBox[{"dChan", "^", "2"}]}], ";", "\n", "\[IndentingNewLine]", 
     RowBox[{"P21", "=", 
      RowBox[{"OChan", "*", "aChan"}]}], ";", 
     RowBox[{"P12", "=", "P21"}], ";", "\[IndentingNewLine]", 
     RowBox[{"P31", "=", 
      RowBox[{"OChan", "*", "bChan"}]}], ";", 
     RowBox[{"P13", "=", "P31"}], ";", "\[IndentingNewLine]", 
     RowBox[{"P41", "=", 
      RowBox[{"OChan", "*", "cChan"}]}], ";", 
     RowBox[{"P14", "=", "P41"}], ";", "\[IndentingNewLine]", 
     RowBox[{"P51", "=", 
      RowBox[{"OChan", "*", "dChan"}]}], ";", 
     RowBox[{"P15", "=", "P51"}], ";", "\[IndentingNewLine]", 
     RowBox[{"P32", "=", 
      RowBox[{"aChan", "*", "bChan"}]}], ";", 
     RowBox[{"P23", "=", "P32"}], ";", "\[IndentingNewLine]", 
     RowBox[{"P42", "=", 
      RowBox[{"aChan", "*", "cChan"}]}], ";", 
     RowBox[{"P24", "=", "P42"}], ";", "\[IndentingNewLine]", 
     RowBox[{"P52", "=", 
      RowBox[{"aChan", "*", "dChan"}]}], ";", 
     RowBox[{"P25", "=", "P52"}], ";", "\[IndentingNewLine]", 
     RowBox[{"P43", "=", 
      RowBox[{"bChan", "*", "cChan"}]}], ";", 
     RowBox[{"P34", "=", "P43"}], ";", "\[IndentingNewLine]", 
     RowBox[{"P53", "=", 
      RowBox[{"bChan", "*", "dChan"}]}], ";", 
     RowBox[{"P35", "=", "P53"}], ";", "\[IndentingNewLine]", 
     RowBox[{"P54", "=", 
      RowBox[{"cChan", "*", "dChan"}]}], ";", 
     RowBox[{"P45", "=", "P54"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Ps", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"P11", ",", "P12", ",", "P13", ",", "P14", ",", "P15"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"P21", ",", "P22", ",", "P23", ",", "P24", ",", "P25"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"P31", ",", "P32", ",", "P33", ",", "P34", ",", "P35"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"P41", ",", "P42", ",", "P43", ",", "P44", ",", "P45"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"P51", ",", "P52", ",", "P53", ",", "P54", ",", "P55"}], "}"}
         ]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Pt", "=", 
      RowBox[{
       RowBox[{"IdentityMatrix", "[", "5", "]"}], "-", "Ps"}]}], ";", "\n", 
     "\[IndentingNewLine]", 
     RowBox[{"PsChopped", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"P11", ",", "P13"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"P31", ",", "P33"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"PtChopped", "=", 
      RowBox[{
       RowBox[{"IdentityMatrix", "[", "2", "]"}], "-", "PsChopped"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Constants", " ", "for", " ", "this", " ", "problem"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]s", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"4", " ", "\[Pi]"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"mRb", "/", "\[HBar]c"}], ")"}]}], ")"}]}], " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"\[Gamma]", "/", "\[Beta]"}]}], ")"}], "^", "2"}], "/", 
         "\[Beta]"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Gamma]", "\[Rule]", ".00823028"}], ",", 
         RowBox[{"\[Beta]", "\[Rule]", ".252917"}]}], "}"}]}]}], ";", "\n", 
     "    ", 
     RowBox[{"\[Lambda]t", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"4", " ", "\[Pi]"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"mRb", "/", "\[HBar]c"}], ")"}]}], ")"}]}], " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"\[Gamma]", "/", "\[Beta]"}]}], ")"}], "^", "2"}], "/", 
         "\[Beta]"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Gamma]", "\[Rule]", 
          RowBox[{"-", ".03814310"}]}], ",", 
         RowBox[{"\[Beta]", "\[Rule]", ".217046"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Rat", "=", 
      RowBox[{"Ehf", "/", "\[HBar]c"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]mat", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"PsChopped", "*", "\[Lambda]s"}], "+", 
        RowBox[{"PtChopped", "*", "\[Lambda]t"}]}], ")"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]oScale", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]xScale", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]cScale", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Beta]oScale", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Beta]cScale", "=", "1"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]o", "=", 
      RowBox[{
       RowBox[{"\[Lambda]mat", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "*", "\[Lambda]oScale"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]c", "=", 
      RowBox[{
       RowBox[{"\[Lambda]mat", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "*", "\[Lambda]cScale"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]x", "=", 
      RowBox[{
       RowBox[{"\[Lambda]mat", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], "*", "\[Lambda]xScale"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"m", "=", 
      RowBox[{"mRb", "/", "\[HBar]c"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Beta]s", "=", "0.252917"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Beta]t", "=", "0.217046"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Beta]o", "=", 
      SqrtBox[
       FractionBox["\[Lambda]o", 
        RowBox[{
         FractionBox[
          RowBox[{"\[Lambda]s", "*", 
           RowBox[{"PsChopped", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], 
          SuperscriptBox["\[Beta]s", "2"]], "+", 
         FractionBox[
          RowBox[{"\[Lambda]t", "*", 
           RowBox[{"PtChopped", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], 
          SuperscriptBox["\[Beta]t", "2"]]}]]]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"\[Beta]c", "=", 
      SqrtBox[
       FractionBox["\[Lambda]c", 
        RowBox[{
         FractionBox[
          RowBox[{"\[Lambda]s", "*", 
           RowBox[{"PsChopped", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}]}], 
          SuperscriptBox["\[Beta]s", "2"]], "+", 
         FractionBox[
          RowBox[{"\[Lambda]t", "*", 
           RowBox[{"PtChopped", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}]}], 
          SuperscriptBox["\[Beta]t", "2"]]}]]]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Beta]1", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Beta]o", "+", "\[Beta]c"}], ")"}], "/", "2"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Beta]2", "=", 
      RowBox[{"\[Beta]1", "*", "\[Beta]cScale"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Beta]1", "=", 
        RowBox[{"\[Beta]o", "*", "\[Beta]oScale"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Beta]2", "=", 
        RowBox[{"\[Beta]c", "*", "\[Beta]cScale"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "  ", 
      RowBox[{"FROM", " ", "McNEIL"}], "  ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**", "**"}], "*****)"}], "\[IndentingNewLine]", 
     RowBox[{"betaS", "=", "0.252893844015606"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"betaT", "=", "0.21719222256530937"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"LamS", "=", 
      RowBox[{
       RowBox[{"-", "2.6433717266433605"}], "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "7"}]]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"LamT", "=", 
      RowBox[{
       RowBox[{"-", "1.961657673776105"}], "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "7"}]]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"LamScale", "=", "4.44178"}], ";", "\[IndentingNewLine]", 
     RowBox[{"betaScale", "=", "5.85500"}], ";", "\n", "\[IndentingNewLine]", 
     
     RowBox[{"ich", "=", "3"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Lambda]mat", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Ps", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], "*", "LamS"}], "+", 
       RowBox[{
        RowBox[{"Pt", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], "*", "LamT"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Lambda]mat", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Ps", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "ich"}], "]"}], "]"}], "*", "LamS"}], "+", 
        RowBox[{
         RowBox[{"Pt", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "ich"}], "]"}], "]"}], "*", "LamT"}]}], ")"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Lambda]mat", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Ps", "[", 
          RowBox[{"[", 
           RowBox[{"ich", ",", "1"}], "]"}], "]"}], "*", "LamS"}], "+", 
        RowBox[{
         RowBox[{"Pt", "[", 
          RowBox[{"[", 
           RowBox[{"ich", ",", "1"}], "]"}], "]"}], "*", "LamT"}]}], ")"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Lambda]mat", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Ps", "[", 
           RowBox[{"[", 
            RowBox[{"ich", ",", "ich"}], "]"}], "]"}], "*", "LamS"}], "+", 
         RowBox[{
          RowBox[{"Pt", "[", 
           RowBox[{"[", 
            RowBox[{"ich", ",", "ich"}], "]"}], "]"}], "*", "LamT"}]}], ")"}],
        
       RowBox[{"(", "LamScale", ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]o", "=", 
      RowBox[{"\[Lambda]mat", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]c", "=", 
      RowBox[{"\[Lambda]mat", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]x", "=", 
      RowBox[{"\[Lambda]mat", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Beta]1", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"betaS", "+", "betaT"}], ")"}], "/", "2"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Beta]2", "=", 
      RowBox[{"\[Beta]1", "*", "betaScale"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"**", "**"}], "*", "*", 
       RowBox[{
       "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
         "**", "**"}]}], "*****)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Delta]b", "=", 
      FractionBox[
       SqrtBox[
        RowBox[{"mRb", "*", "\[CapitalDelta]b", "*", "Ehf"}]], "\[HBar]c"]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]",
      
     RowBox[{"aelem", "=", 
      RowBox[{
       RowBox[{"a0", "[", "\[Delta]b", "]"}], "/", "aBohr"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"relem", "=", 
      RowBox[{"r0", "[", "\[Delta]b", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"v4elem", "=", 
      RowBox[{"v4", "[", "\[Delta]b", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"alist", ",", 
       RowBox[{"{", 
        RowBox[{"Bfield", ",", "aelem"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"rlist", ",", 
       RowBox[{"{", 
        RowBox[{"Bfield", ",", "relem"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"v4list", ",", 
       RowBox[{"{", 
        RowBox[{"Bfield", ",", "v4elem"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"\[Delta]alist", ",", 
       RowBox[{"{", 
        RowBox[{"Bfield", ",", "\[CapitalDelta]a"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"\[Delta]blist", ",", 
       RowBox[{"{", 
        RowBox[{"Bfield", ",", "\[CapitalDelta]b"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"\[Delta]clist", ",", 
       RowBox[{"{", 
        RowBox[{"Bfield", ",", "\[CapitalDelta]c"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"\[Delta]dlist", ",", 
       RowBox[{"{", 
        RowBox[{"Bfield", ",", "\[CapitalDelta]d"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"\[Gamma]list", ",", 
       RowBox[{"{", 
        RowBox[{"Bfield", ",", 
         RowBox[{
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[Gamma]", "*", "\[HBar]c"}], ")"}], "2"], 
           RowBox[{"mRb", "*", "Ehf"}]], "/.", 
          RowBox[{"\[Gamma]soln", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bfield", ",", "140", ",", "170", ",", ".1"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.448293456972437*^9, 3.448293867865491*^9}, {
   3.448293900114732*^9, 3.448293955313344*^9}, {3.448294001549846*^9, 
   3.448294107173552*^9}, {3.448294152266849*^9, 3.44829415321212*^9}, {
   3.448294245589912*^9, 3.448294271835093*^9}, 3.448294382269962*^9, {
   3.448294442449038*^9, 3.448294499865808*^9}, {3.448294921764774*^9, 
   3.448294937840872*^9}, {3.448295055684663*^9, 3.448295072941856*^9}, {
   3.448295111612201*^9, 3.448295111806275*^9}, {3.448295237825979*^9, 
   3.448295308081351*^9}, {3.448295343608025*^9, 3.448295494583097*^9}, {
   3.448297304504046*^9, 3.448297310138193*^9}, {3.448297344969053*^9, 
   3.448297345698629*^9}, {3.448297377984162*^9, 3.448297391105466*^9}, {
   3.448297421731142*^9, 3.448297427531024*^9}, {3.448297466298999*^9, 
   3.448297537524683*^9}, {3.448297581971376*^9, 3.448297586944687*^9}, {
   3.4482976395244*^9, 3.448297669960683*^9}, {3.448297702511504*^9, 
   3.448297714166532*^9}, {3.448297796061483*^9, 3.448297906037817*^9}, {
   3.448298216055052*^9, 3.448298222417485*^9}, {3.448298312819155*^9, 
   3.448298441283102*^9}, {3.448298501714818*^9, 3.44829853625747*^9}, {
   3.448298600621809*^9, 3.448298616788894*^9}, {3.448298814541937*^9, 
   3.448298841662886*^9}, {3.448298876264995*^9, 3.448298952448786*^9}, {
   3.448299032173085*^9, 3.448299040783631*^9}, {3.448299092361528*^9, 
   3.448299151988795*^9}, {3.448299195344592*^9, 3.448299301566825*^9}, {
   3.448367683503803*^9, 3.448367697079366*^9}, {3.448371919214754*^9, 
   3.448371928746571*^9}, {3.448371996508485*^9, 3.4483720061588984`*^9}, {
   3.448372110063981*^9, 3.448372125255395*^9}, {3.448372364095224*^9, 
   3.4483723664861526`*^9}, {3.448624474362448*^9, 3.448624561317978*^9}, {
   3.448624598197726*^9, 3.448624667625884*^9}, {3.448624725004907*^9, 
   3.448624822092074*^9}, {3.448624933885578*^9, 3.448625021205*^9}, {
   3.448625056862416*^9, 3.448625058709521*^9}, {3.448625093547222*^9, 
   3.448625097022354*^9}, {3.448625423026545*^9, 3.448625470367588*^9}, {
   3.448625576050037*^9, 3.448625581797261*^9}, {3.44862561877358*^9, 
   3.448625772433014*^9}, {3.44862580791938*^9, 3.448625902457888*^9}, {
   3.448625960971608*^9, 3.448626080949398*^9}, {3.448626143846443*^9, 
   3.448626272088029*^9}, {3.448626307422231*^9, 3.448626565061807*^9}, {
   3.448626631344159*^9, 3.448626887836057*^9}, {3.448630582911801*^9, 
   3.448630620161454*^9}, {3.44863181209352*^9, 3.44863190084796*^9}, {
   3.448631932529585*^9, 3.448631937932092*^9}, {3.448632306106706*^9, 
   3.44863233009513*^9}, {3.448632371589559*^9, 3.448632825536272*^9}, {
   3.448633858261335*^9, 3.448633863960825*^9}, {3.448648448458659*^9, 
   3.448648453566124*^9}, {3.448714772207743*^9, 3.448714833749798*^9}, {
   3.448714899645944*^9, 3.448714905554704*^9}, {3.448714943109393*^9, 
   3.44871506192483*^9}, {3.448715094963057*^9, 3.448715647964938*^9}, {
   3.473172624083312*^9, 3.4731726651929502`*^9}, {3.4731727100838623`*^9, 
   3.4731727143495145`*^9}, {3.4731727503966208`*^9, 
   3.4731727794749317`*^9}, {3.473600890624586*^9, 3.4736008990777645`*^9}, 
   3.4736010129378686`*^9, {3.474741376940544*^9, 3.4747414411288657`*^9}, {
   3.4747415674273577`*^9, 3.47474163753763*^9}, {3.4747416888507867`*^9, 
   3.4747417413358335`*^9}, {3.4747417770237904`*^9, 
   3.4747422609518595`*^9}, {3.4747422951241717`*^9, 
   3.4747425234239693`*^9}, {3.4747425569712734`*^9, 
   3.4747427854898233`*^9}, {3.474980886171776*^9, 3.474981193158116*^9}, {
   3.4749812255489483`*^9, 3.4749814229408364`*^9}, {3.4749814543785377`*^9, 
   3.4749822997745733`*^9}, {3.47498243291605*^9, 3.4749830782951803`*^9}, {
   3.4760183301503263`*^9, 3.4760185264978456`*^9}, {3.4760189300055933`*^9, 
   3.4760192278394365`*^9}, {3.4760192881530943`*^9, 3.476019309059746*^9}, {
   3.4761915778200207`*^9, 3.4761916245078197`*^9}, {3.476191741117941*^9, 
   3.4761918097902555`*^9}, {3.4761918868844986`*^9, 3.4761918877751293`*^9}, 
   3.4761919513224115`*^9, {3.476192149823682*^9, 3.476192156151847*^9}, {
   3.4761922188553734`*^9, 3.4761922250116625`*^9}, {3.476557887619652*^9, 
   3.4765579445426197`*^9}, {3.476557978480771*^9, 3.4765579809026923`*^9}, {
   3.4765582120008793`*^9, 3.476558212719643*^9}, {3.47714611775673*^9, 
   3.477146192430039*^9}, {3.4771463607457705`*^9, 3.4771463643395896`*^9}, {
   3.477146445606775*^9, 3.477146450325616*^9}, {3.477159214410055*^9, 
   3.477159217258843*^9}, {3.4772266288174267`*^9, 3.477226640192645*^9}, {
   3.477226687006044*^9, 3.4772267160378513`*^9}, {3.477227018637411*^9, 
   3.477227020840578*^9}, {3.4772273978946924`*^9, 3.4772273988634615`*^9}, {
   3.4772320585622377`*^9, 3.4772320617966747`*^9}, {3.4772321325792837`*^9, 
   3.477232133469926*^9}, {3.477232260081732*^9, 3.4772322784102087`*^9}, {
   3.4772334772769766`*^9, 3.4772334805582895`*^9}, {3.4772335167777348`*^9, 
   3.4772335229966044`*^9}, {3.47739960040937*^9, 3.477399614911106*^9}, {
   3.477399680788319*^9, 3.477399699809363*^9}, {3.4776723168272333`*^9, 
   3.4776723512334833`*^9}, {3.4776723985772333`*^9, 
   3.4776723987803583`*^9}, {3.4776724685616083`*^9, 
   3.4776724703897333`*^9}, {3.4776726928116083`*^9, 
   3.4776726929834833`*^9}, {3.4776727452491083`*^9, 
   3.4776727810616083`*^9}, {3.477675414192232*^9, 3.477675416287027*^9}, {
   3.477844650699188*^9, 3.477844655097403*^9}, {3.477846903163803*^9, 
   3.47784690746697*^9}, {3.479572492628894*^9, 3.479572495093608*^9}, {
   3.479578584676754*^9, 3.479578588996383*^9}, {3.479578627654984*^9, 
   3.47957863375345*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getting Jose data", "Subsection",
 CellChangeTimes->{{3.44862511016289*^9, 3.448625114697681*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "potFile", "=", 
   "\"\</home/cnewby/SeniorDesign/Stuff/ascatt_B_Jose_001.dat\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"potList", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{"potFile", ",", 
     RowBox[{"{", 
      RowBox[{"Number", ",", "Number"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Np", "=", 
   RowBox[{"Length", "[", "potList", "]"}]}], ";", 
  RowBox[{"len", "=", "Np"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rList", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"potList", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "Np"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"VsList", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"potList", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "Np"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VsDataList", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rList", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"VsList", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "Np"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Jose", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"VsDataList", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.448625152476324*^9, 3.448625223899021*^9}, {
  3.448625280277846*^9, 3.448625372893086*^9}, {3.474741331768091*^9, 
  3.474741333814992*^9}, {3.4772270946076193`*^9, 3.4772270974201736`*^9}, {
  3.477399649262206*^9, 3.477399665295441*^9}, {3.47767548968552*^9, 
  3.477675509156465*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Plots", "Subsection",
 CellChangeTimes->{{3.477227074091601*^9, 3.4772270760135126`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"\[Gamma]list", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a2", "=", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"\[Delta]blist", ",", 
      RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a3", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"145", ",", ".927"}], "}"}], "}"}], ",", 
     RowBox[{
     "PlotMarkers", "\[Rule]", 
      "\"\<\!\(\*SubscriptBox[\(\[Delta]\), \(b\)]\)\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a4", "=", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"145", ",", ".9"}], "}"}], "}"}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "\"\<\[Gamma]\>\""}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]vs\[Gamma]", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"a1", ",", "a2", ",", "a3", ",", "a4", ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{".8", ",", "1"}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<B (G)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[Delta]\), \(b\)]\) and \[Gamma] \
(\!\(\*SuperscriptBox[\(nm\), \(-1\)]\))\>\""}], "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<\[Gamma] for single form factor and \
\!\(\*SubscriptBox[\(\[Delta]\), \(b\)]\) vs. B\>\""}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.4776723634834833`*^9, 3.4776723902959833`*^9}, {
  3.4776727956241083`*^9, 3.4776728470303583`*^9}, {3.477675935733021*^9, 
  3.477676037109643*^9}, {3.477846938729474*^9, 3.47784702009175*^9}, {
  3.477847065580497*^9, 3.477847068406243*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
ne0p1v8H0LNlXQ==
     "]]}, 
   GraphicsComplexBox[{{145., 0.927}, {145., 0.927}, {145., 0.927}, {145., 
    0.927}}, {
     {RGBColor[0, 0, 1], 
      TagBox[InsetBox[
        SubscriptBox["\[Delta]", "b"], 3],
       "InsetString"], 
      TagBox[InsetBox[
        SubscriptBox["\[Delta]", "b"], 4],
       "InsetString"]}, {}}], 
   GraphicsComplexBox[{{145., 0.9}, {145., 0.9}, {145., 0.9}, {145., 0.9}}, {
     {RGBColor[1, 0, 0], 
      TagBox[InsetBox["\[Gamma]", 3],
       "InsetString"], 
      TagBox[InsetBox["\[Gamma]", 4],
       "InsetString"]}, {}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"B (G)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[Delta]\\), \\(b\\)]\\) and \[Gamma] (\\!\\(\
\\*SuperscriptBox[\\(nm\\), \\(-1\\)]\\))\"", TraditionalForm]},
  ImageSize->{591., Automatic},
  PlotLabel->FormBox[
   "\"\[Gamma] for single form factor and \
\\!\\(\\*SubscriptBox[\\(\[Delta]\\), \\(b\\)]\\) vs. B\"", TraditionalForm],
  PlotRange->{0.8, 1},
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{{3.4776723907178583`*^9, 3.4776724049522333`*^9}, 
   3.4776725837178583`*^9, {3.4776726882334833`*^9, 3.4776727027022333`*^9}, {
   3.4776727880303583`*^9, 3.4776728474522333`*^9}, {3.477675947104256*^9, 
   3.477675976585165*^9}, {3.477676011037245*^9, 3.477676039356353*^9}, 
   3.477846935704093*^9, {3.477847012588712*^9, 3.477847026967761*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a3", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"150", ",", 
        RowBox[{"-", "2200"}]}], "}"}], "}"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", "\"\<Mine\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a4", "=", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"153", ",", 
         RowBox[{"-", "1500"}]}], "}"}], "}"}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "\"\<D'Incao\>\""}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"one", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"alist", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MevsJose", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"one", ",", "Jose", ",", "a3", ",", "a4", ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<B (G)\>\"", ",", "\"\<a (Bohr)\>\""}], "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Feshbach Resonance for\!\(\*SuperscriptBox[\(\\\ \), \(85\)]\)Rb \
using Yamaguchi Form Factors\>\""}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.477227111998578*^9, 3.477227140780381*^9}, {
  3.477675453400017*^9, 3.477675476771474*^9}, {3.477675514627754*^9, 
  3.477675519186306*^9}, {3.477675554419844*^9, 3.477675625171884*^9}, {
  3.477847059258018*^9, 3.477847139482316*^9}, {3.479578574062543*^9, 
  3.479578577933562*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
ei/Ii79wnIb7j0F96IW7pz7Owv0nXu9K78v/GBnj/mMwYW6Tzeubpvzvh4LB
3myHF+N+WIT7j8HxYLOReqstcf8xsA/StCh4sQT3H4O2IF1rjZBluP8YLMuf
QguGr+RegXi+/bPfdIRY4/5j8JvByqZRvWtw/zEovSo3s8i1wf0nXu9WN9/f
6tfi/hPvHydlevWHddxTMhjtYlK6VccO9x8DXb9btNbEHvefeP92mzZMXr0e
9x8Dh42KIXtcN+D+Y7Dh4sgTnzwduFfL4MjrXWb3dm/E/cdgq17nN5p+jrj/
GKT+o3PriY8T7j8GZk7z1zrsdMb9x+CShfbYOKkL99oYqAxMdCzY4Ir7j8FX
5noJt6w24f5j8OJKQfb78Ztx/zHILzk/ST9iM+4/BouD3k7y/biZe70M2h2T
F7zeKuD+E8+/brsip0nA/ccg8sDoWVlWBPcfgyS/5w49+QT3H4PB1wzXHZ1A
uSeRgoP7vVcxQRT3nxSWtky7odJBcf9JYUT5+ZFdyxnuPymENJiXrznNcP9J
QTZhdYKZmpR7Y6Tw+PDjQYVbpbj/pDDgfW1eVZUU958Ufvxz4tQAfTfcf1LY
f/ZAUEOIG+4/KRjazqprfezGvalSGPvXVJcMY3fcf1Jo2DXCZJLMHfefFMza
9Be6tLvj/pPCg0FfTfT4bgvuPynIkxpslkZs4Z6RFCyE2tl/t2zB/SeFWG/N
h/I5Hrj/pDD4i0iLIcEeuP+kcHRTlDm764H7Twq6V4x3XJjsyT2QwtB/yuzf
enoq/w/V5oNp
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
trhuFyL2T4M97skX4RVq+j9lrUPI
     "]]}, 
   GraphicsComplexBox[{{150., -2200.}, {150., -2200.}, {150., -2200.}, {
    150., -2200.}}, {
     {RGBColor[0, 0, 1], 
      TagBox[InsetBox["Mine", 3],
       "InsetString"], 
      TagBox[InsetBox["Mine", 4],
       "InsetString"]}, {}}], 
   GraphicsComplexBox[{{153., -1500.}, {153., -1500.}, {153., -1500.}, {
    153., -1500.}}, {
     {RGBColor[1, 0, 0], 
      TagBox[InsetBox[
        RowBox[{
         RowBox[{"D", "'"}], "Incao"}], 3],
       "InsetString"], 
      TagBox[InsetBox[
        RowBox[{
         RowBox[{"D", "'"}], "Incao"}], 4],
       "InsetString"]}, {}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"B (G)\"", TraditionalForm], 
    FormBox["\"a (Bohr)\"", TraditionalForm]},
  ImageSize->{809., Automatic},
  PlotLabel->FormBox[
   "\"Feshbach Resonance for\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \
\\(85\\)]\\)Rb using Yamaguchi Form Factors\"", TraditionalForm],
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{{3.4772271300770507`*^9, 3.4772271412647657`*^9}, 
   3.477232071015602*^9, {3.477399675985227*^9, 3.47739969063482*^9}, 
   3.477675441714213*^9, {3.477675473537954*^9, 3.477675519497606*^9}, 
   3.477675570818555*^9, 3.477675625625611*^9, 3.477847037463598*^9, {
   3.477847104285568*^9, 3.477847139743647*^9}, {3.47957864183484*^9, 
   3.479578647541727*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
z8IAKJwdNHFHBRCkagHwUf/Jpo57CAApvsFdMiqAIPkJAKknFwJAdXdb9T9/
AKzJCoZN9Eh7Xk08AEH6FgCcMFIhSg9jzJdfVgCgwte+/+l3nfgRQkimepTp
D+3uJVta6KVMjaU//NN+aOteVTclwjnpiBi1m7Qkxbl3lGKfPn26i5wIl2LP
UbrdTkoD1bt3b3XhhReaIIyWLVsS12E+HTBggNp9993V6aefbgKw2mvarl27
tnr66adDz9LHNEYaQ7Hq0aOHZnQn+Mecz/fuu++6A61C3edyFTYtiJrBIukm
Wo9TJuSQIkK2fCXtVJE5VO/DD83uplX9hQQIeloMPIvXfT46UHOqjS4BkBLF
lXffCo+FviT5y5pbNGvWTEY1VysE1apVMydYcP2X9Jxwq2effVZdeeWVJrKt
adOmWlDrFQnxRcGq5tL7VK7uv2ddJOY4xh122CHUffcsXveJ6upnA6/MRW1P
Td+2+w0ydj9DGWnzjEOYgoRDDF15wunQwXjKzLFwBx10kD+qhGccs8Q1cuRI
ThEJw14R7HaR6TZdZX1Rwb9Lly5Sj6YyWnflfP1jliohf7fffrtZsnqp+gPH
6BYnPnF/1113NeWxuZ555hkzVAJLqYi69dZbEz+Wythny4vCZWtdn/z8uQq3
5leNwJwKSdbIOaeOEVq5Ind9V2lcLy5zZueHkg1vrg22IRW+qpbx24j4InPS
zXHHHadat25tuCnHwTbN8cx8fH6FhooNv5RT3yjKvM022/B7r9yPze/zMjTH
STzBC+by7bff7pX7cbC5CW4UzAN8mEXMJqBfc/tJYxNqzZ7DJHOW7mu4rBVF
qX4xI4bi2I9atWplTv5iMe25555qjz32MOv19ddfhwGoAw44wJy/+pyWzps0
aWIWETHWhCizJy1btsxHCXN+GRsMFEvgIQTX2cb3+/4Aj9LLEhVZCVw3nqMr
jFXONqXvMDj6wvF9cccd7Bt9Pvnkk81GGaFv5p1sY47ybQacCC/LMAxXEaKe
WdvStPC0KEOgjLWtoV4/EjrhfVmm3LLCJmZ7QZohDvTxxx83o2NdEU6bDePB
7vPvKJiCWlgIDBGeSFc+/fRTKQjFmWD0FIbzxBNP2G1758hzQ885QYRo3cmT
J5utFkbYokULVVpampOus/TMrYntc2Ioj3VRHoty+F12llArKo3YnteJi6XK
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
hpva4v8BKPPMFA==\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[CapitalDelta]'s", "Subsection",
 CellChangeTimes->{{3.477227183999961*^9, 3.4772271854843645`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"LPA", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"\[Delta]alist", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LPB", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"\[Delta]blist", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Green", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LPC", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"\[Delta]clist", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LPD", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"\[Delta]dlist", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Orange", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aA", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"800", ",", ".3"}], "}"}], "}"}], ",", 
     RowBox[{
     "PlotMarkers", "\[Rule]", 
      "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\), \(a\)]\)\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bB", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"800", ",", ".68"}], "}"}], "}"}], ",", 
     RowBox[{
     "PlotMarkers", "\[Rule]", 
      "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\), \(b\)]\)\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cC", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"800", ",", "1.32"}], "}"}], "}"}], ",", 
     RowBox[{
     "PlotMarkers", "\[Rule]", 
      "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\), \(c\)]\)\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dD", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"800", ",", "1.57"}], "}"}], "}"}], ",", 
     RowBox[{
     "PlotMarkers", "\[Rule]", 
      "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\), \(d\)]\)\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eE", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"175", ",", "x"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1.95"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fF", "=", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"175", ",", "2"}], "}"}], "}"}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "\"\<175 G\>\""}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"sepvsBplot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "LPA", ",", "LPB", ",", "LPC", ",", "LPD", ",", "aA", ",", "bB", ",", "cC",
     ",", "dD", ",", "eE", ",", "fF", ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(B\), \(0\)]\) (G)\>\"", ",", 
       "\"\<\[CapitalDelta] (\!\(\*SubscriptBox[\(E\), \(hf\)]\))\>\""}], 
      "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Channel Separations vs. Magnetic Field\>\""}]}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.4771462086334753`*^9, 3.4771463473548884`*^9}, {
  3.4771464003402805`*^9, 3.477146400684037*^9}, {3.477159228682357*^9, 
  3.477159562938982*^9}, {3.477159650737839*^9, 3.477159657248737*^9}, {
  3.477844678927516*^9, 3.477844772254822*^9}, {3.479572446977723*^9, 
  3.479572627623121*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxV13lUzP/bBvCEZB9LJGIskSVliaxdEkVJKqmEadXetO81TVOztErIlmRL
9U1Eso+yRJbKlpCoFEIIZf31nHO//3j803mde+7P9bnmdhyNd/S1cFFUUFB4
21NB4f9+/v8/7frsp3vbsaH8zk9kBfTI97FpaGdWhsXZfdXmb5k5WFoVHn31
FfNw2HSu2zK7jlkVdUGegYdqmMfgQw3n8vBKZi72vUhcnFDOPAEjcie3/7jA
PAk1kulP3U8zT0aaWvOPZwXMmti7OMvU7AjzNDwamvNEvp95Bmp7L949Zyfz
TEwrP7vtaAqzDhYucbg6Ssw8C4fzRZrJMcyzoZvoc1MhlHkOJmR5ZgXymeei
X1vFf61uzLqYXfbgm70D8zxkFj8NrrZlng/F3ZqzVlow62HVtkEaF1YzL8DS
HnUWOsuZF+L79qfnjyxiXoQ7C+03jZ7LvBgZWicXbpvBvATF76ZY9tFgXgqN
+ZxjUerM+qgYe35ehwozYNwRpOg5iCwAXNdl9HutxObL0DHCda3tv480X4ZR
3ourq36QFQywtNwtzbidzQ1gULU4Wd7K5suRl96vQu8Vmy/HTvNJy04+ZXND
9M183jm1hs0NUbk04VPObTZfgRuOgRpjytl8Bb64/9yz4wKbr0Soopf54NNs
vhIfJ6ivlBawuRGW93OM7HmEzY3wTT/1a9R+NjfGtIyu/M4dbG6M2+O+HwlI
YfNVSDCse/Uxgc1XYdB/v7Z4xLD5aoxfU8R9E8Lmq5HhYDbJkc/mJkjjz/Cs
d2NzE4hWHfxm58DmprDq3evaE1s2N0WIUsFjKws2X4OuznatmtVsvgaHa6bd
Xruczc2g9uBk/t1FbG6Gprj6GpO5bL4WwtK+uD2Dzddif0rSV2MNNjdHLx/5
h5vqZJjjnvK/mUYj2OfN4b8x5+yNQWS5OR4W9JKs7MP214GfIsi+8e8D7a/D
+uf8HkadZME6rLykk3+znSxfh9qc0VnGb8kKFkhYlVx36xXbt0BJ6SueSR3b
t8Ajg6BZd2vYvgVC4w+brq1k+5Zwdr9zqrqc7Vvi8ITVzlYX2b4l9uhEODw5
zfYtobr5Up7df2zfCmFXfVB/hO1bIevihwmOWWzfCqp/Mi3e7GT7VpgZef++
RyrbX4+O6PY9n8Rsfz1sd248HShg++ux5AB/zM9Qtr8eorLUBzF+bN8aQ4NG
1fX2YPvWUAr10UlyZPvW2FP76fHQjWzfGg7tf+/utmT7G6Dl8kdlvCnb3wC9
qWtO5Bqy/W5HmO/RWcL2N8DmjfuTUl22bwMbg9+uy2ayfRukFnusuj2Z7duA
k68aYzmO7dsg7Y278ouRbN8WR/llza4ctm+LwuyEkZ+V2b4tmtVGZ0X0YPu2
iKlqClP62Ub7dsj7Z5y/7QsZdkif899s9fdkgR0EhiGc441kuR0ebxi4Qvc5
29+IiQ2Pqq4+ZPsbMXn//NNmd9n+RrzZu/vTs+tsfyOy5jnFuV9m+/boHP7b
90cJ27fHq+l3zsSfYPv2OHtp0frhuWzfHuZ2xWaHstn+JtTV782ZvZvtb8Lk
4M3ryrax/U3gZzpvtJCx/U3Y3l/16msh29+Mb69fCwMi2P5mZMVoH+wVyPY3
Y26a25idXmx/M5SHdHVMcWH7WzDW1HT6+U1sfwtGP717xdSa7W9B6P63p16a
sf0tsLjTv3eAEdvnYc+b7BIlkLk8/D2vUrFHjz2Ph/cuTxZozyLzeCheZzng
2lT2fB42z/uhbzuBnM1D7ahZjz6qsTweatb63hENIzd0z8O4k0cPYPkO2CAu
fn2yF8t3QNSZXYqr/rynfAc4py5OaPhG5jmg48MQn9CPZIEDvvwQn+e0kLMd
8G38YK/jL8lyB3jPVI0zqCU3OCBba7jC8yqygiOORAU2Bt0icx3hdjtPi1PG
8h2ROXDqy7zzLN8RV1McOlcUs3xHaDTeCHuVz/IdUfuh0inqMMt3xOGXjSWj
9rN8R3DmCwNKdrB8J/DkanssU1i+E2J3jJ/+OYHlO2HQ2P5TUmNYvhMMBpum
aIWyfCcoeNk63OGzfCecFuVme7qzfCc4/Sg07e/I8p2w/cRrl3w7lu8M4zfn
2kwsWb4z+k3If9VmwvKdUTxPa0WKIct3RvqKsyN1lrB8Z6y7JLet0WX5zqi2
vdo/aCbLd4b1pFkzVaewfGcsDpBcvTCO5btgzDv9G1tUWb4LcsOqFvcawvJd
kL+lWON4X5bvgqbJjrFmiizfBUOOWZt3/HxH+S543qv/9j1fyXIX3DjZtWpZ
G7nBBape+4Nam8gKrniw1G9E2gsy1xWFse0z9B6T4Yo3tTvPNdwj81xhodtw
UXqTLHDF4ofG8+fIWb4rVumvmfqilOW7ItbUY7v4JMt3xZix6sGz81j+Vkgm
NFa/yGH5W7Fy+MJj0r0sfyuedR34rpvB8rfivMZ2+esklr8V8+al906LZ/lb
Ya8y5saSaJa/FW2dJxTbgln+Vsx2vHthjy/Ld8PAsR2fV7mxfDfkGx4+0sVj
+W7IWLD5yXFblu+GhPwcsZ0Fy3eDdcaXkv4mLN8NdXr3XS4tZ/lueKp5PsN3
Mcvvni/VNZygy/LdMSK7LPCRFst3h+vFpsnSySzfHRyzsRuXjGP57rhk+2XI
l5Es3x2rZjaZHOOwfHeccg7pu6kvy3eHcoO2yTBFlu+OsXe3Dbn98y3le+Bo
zvhNsV/JXA80c51nLmgjwwMH19XHf24i8zygIFFxzntBFnjAi5d6y+kxOdsD
zvLqEvX7ZLkH7B87zqi9SW7wwLFRt6Ztl7N8TxiuTjxldo7le0LO17nW7xTL
94RSvT7vZh7L94Tp9GVi0SGW74nGBRcXGOxj+Z4YMmdBqMIOlu+JJjGWX0lm
+Z7gfLbbG53A8r1wz2dI7NIYlu+FfcYfOv6GsHwv6A4M/XGFz/K9sCx9kTTW
neV7df/+cDVvuSPL90L4zh32ShtZvlf33+9lB25ZsnwvBEjWBiSbsnxvbPxr
8nTdCpbvDZ5CWfWIpSzfG47mSzY9n8fyvfHu26rIHG2W7436JYHa7pos3xu2
541DdMazfG/sN7Cy6hzF8r1x9MvEm/KhLN8H06avqJL2Z/k+sNy2gm/Zi+X7
QDSo+Jj6n1bK94F+1eiQ1m9kgQ+qjAa9LP5IzvaB3rRRDTEtZLkPmnwrw00b
yA0+CLY6fWLUU7KCL45aO8W0VJO5vng/3+3dmdtk+MLut8VnUTnL9wXvXXGG
1UWW74tM2ehHk86wfF/IjqkVf/uP5fvCe42B9s2jLN8Xb25NXL37AMvn402+
eS+vTDKHj/Xldpv1t7H34aON+9BmmIysw8djlbUdLUL2fnzsnrN51qUIsjkf
ZSYZnO2B7H35OOorSnf3JvP5mNZ+9Sxc2fvzIdrUIFDdQk7j411CwMf2DawP
H57hg3vcNicX8ZEuMj53aBXrx8dCneKR0QbkKj70VjaNsV3E+vIx6S7/1ty5
5HY+hvX9qD5Ei/X3g0nEZ7WPGqy/HxRfc65WjmX9/aCq95qTN5L198Pj07/6
STmsvx+SK7+ecOvL+vvBb7qDwipF1t8PS6/U/Z76q4X6++FNwY8j/TvIAj/Y
rV/7+0MbOc0POlZhCtXN5Gw/uMQMLD5dTy7yw583h4bvfkKW+6Hq4UON6Cpy
lR+m3tFrcbpFbvBDqNTNdnUZud0PoxX/RM66QFbwx1unVItRp8kcf/RWOVfX
4z8y1x/RxcNGvD9C1vHHz+ELej/KIsMfrivLc6/sIpv740yiaY/8NDLPH/wt
voN3SVl/f4T633gQJ2T9/ZGb32bmF8H6+0MyJSp2SyDr74/W+cO8zLxZf38c
cFo9eKkr6+8PddfLnjO3sP7+0NHuLxxnw/r7I+H1HYsh61h/fwQ+OVDfczXr
H4DdmdzJPwxY/wB4N76f+n4R6x8Apdysdy/nsv4ByFR+7PZIi/UPwFJb7SOV
k1n/AEjGGWeXjWP9A6Ax9LLdeVXWPwAhqtqPTg1h/QO6//1fwCnox/oHwP5T
+ICjPVn/AEyKSb+d/fsN9e/+fPZYk33fyPIA6GteTsn8SK4KwLjRnJ07WsgN
AejMK3bY3kBuD8Ch+cZftj0lKwTC0MzbeFsNmROIj7llztsqydxAYGarUfo1
sk4gfrZHfdl+iYxAHNCe5LKzhGzePbeMyN59gswLRO2XiUf255L5gYisvByQ
c5AsCITpzbYBuXvIaYFw6zLzK9xOzg6EdlbCwTNJrH8gXqnpZl2KZ/0DMf/P
r603oln/7vf/GfnvfgjrHwi7z7YudXzWPxC/mubuaXZn/YOg2qMo67Mj6x8E
7PIO+LuR9Q9C81jOqAHrWf8gfJy7ME3NjPUPgt7elKdTjVj/ICzSK/q2AKx/
EGJHGDSvXsD6B8HUuSXXfjbrHwSlgOXLfKez/kFoLekqFE5i/YMQcuO/LzvV
Wf8gqNj1HFgwgvXvfr5J1t+rg1n/IPjvmFBRq8z6d/eznOvR3oP1D0LGlZBm
5V/N1D8YObrbFk7oIHOC0Vtbw2PxBzI3GCMMawM3vCHrBMNk+tqNAS/JCMbF
0plj02rJ5sEofDH68n/VZF4weuZeWHTnNpkfjCfLine9LycLgtHZfqym/yVy
WjAcRuh/mFFCzg5GhdbYVrMT5KJgjLr7rtwvlyzv3j+0OnbHQXJVMJZGNHLP
7yE3BEMwd+Ohl9vJ7cEQ3drQVymZ9Q9BhUmMpVYC6x+CrsYQ4foY1j8EQdUt
O6NDWf/uz7sHbcv1Y/1DMEb1pv8DD9Y/BNfs4xb9c2L9Q3Dmjnnb9E2sfwg+
cR7H21qz/iEY+uacsmQt6x+Ci6MPBZ01Zv1DMCBD727LMtY/BJOXj+eMWsT6
h2DXzF76JnNZ/xA88ZLYRWux/iGQT1rvdGoy6x+Cr0lD7FrGsf6hcH3vrK8+
ivUPxZ2M78OshrL+oejR5l2b2J/1D0Wyg3/ytV6sfygGBeTP+funifqH4mCe
vFLvB5kXCn6WrXVgO5kfCqV29YdFb8mCUFSanFnx8TU5LRThbjfzZzwnZ4dC
pPRbyesRuSgUSZ9+bii4R5aHouKb54EPN8lVoYj++v2F9lVyQyicbi8fHnCe
3B4KVaefBmeLyQphiCwo8/hdQOaEYeFewySDo2RuGNSmauZKD5B1whBmpXKl
OpOMMBSOO12tls76h8E/raDBOZH1D8P6E0fbTohY/zCoiFd//xXF+odh9CT8
NQ5h/cNwf7t271181j8Myk3y/m/cWf/u952wb+g8J9Y/DCPs3dXE9qx/GDz2
VU18up71D8PAD2HaM9ay/mHovX7gUoEx6x8OndrZ5o+Wsf7h2BWc7jp9Eesf
jqbpD2OFc1n/cFz6eCCnTov1D4dm0f5bc6aw/uFoswv6kcxl/cPRVXNvxttR
rH84LnSs81gxjPUPR0rG0aKcAax/OAZGByr0UGL9wyEOcLLj/Wuk/uEw1Bp9
Rd5Jlofju81y7QlfyFXh4O6Oyxe9JzeEw14UN7e1idwejorD726b1pMVIuAW
wvM99YTMiUCoZ9KEUdVkbgTuvVJpFtwm60Rg/ozDZ9+WkxGBF0n1eywvkc0j
EK/rlXq5hMyLwCCjjh3Tisj8CBRXqZ/YdZwsiEDw/dRnvQ+R0yLgpfV5dNA+
cnYExl9t5TfvYP0j8NlU/Zl1KusfAfto3Y23JKx/BBw+PPm8WMj6R+DZ6PwD
JyNY/wjUBK53mRLE+kfikUnU8iwf1j8SG55XLBzhxvpHos+qepNUB9Y/EkP3
OoX03cj6R2Lf1b+XRFasfyS60tZze5ix/pEYUjbwQLQR6x+J85/vLPwD1j8S
nQf0OiIXsv6R4Gt/r/wzh/WPxOGmvLIYLdY/Euubf9UqTmH9I1E9P2WwmMv6
R8KsTGnrADXWPxLzVvdrSB/G+kciOmBJhNpA1j8K/64YLjikxPpH4VzKNTUt
BdY/CktHO3BLu15T/yi0Rl5ebfiVjCgYHxXsqW4jm0fB2dmEw3tD5kVh4Oay
gk8vyfzu5w2T8gVPyYIoWD83sB/6gJwWhai36fwjd8jZUWhfNqZwwQ1yURRM
y2NV7l8hy6Pwlut6zOUcuSoKoxs9nf+cIjdEYber7pqdBeT2KJx55uyoc5Ss
EA35in2HKw+QOdFYEx413G03mRsNMTfvVO/trH80hEXlMYeTWP9oRPt7Rhom
sP7d+9EGx5tjWP9oJJ1/qyQJY/2jofC8x87pAax/NBqdp2+o8mL9o6F5WMkk
2JX1j8bz03P81XmsfzQcoyzuXrdl/aPxtFBxk68l6x+N1dcax6utYf2jMVJx
x5gbK1n/aMwPOrMmAKx/DGRfGs+MX8j6x2DSiCvrq+ew/jHINmjWEmqx/jHw
zO5YOncK6x8DjnqitIXL+scgzWPloH1qrH8Mcv6W3103nPWPwYChByuUB7H+
Mfh6IPyfvA/rH4NhLh/8w3uw/jHQe7ljou6vV9Q/BlamnKGfO8jyGCjkdS4t
/EiuisHJ0+/yvFrJDTFQaom1nvGa3B4DbpitwYdnZAUBGrcM8D3xiKwswHpT
3Rf+98kcAerzfJLn3yKrCnAgx0Lwp4zMFeDi8IiSaxfJmgLk7Y3VSS4h6wgQ
L/v30bqIrCeAeVvyl/F5ZAhgE3d90cdDZGMBAiuWVl7YTzYXYN27bQdlu8g2
AtTcsb5it43ME8BaWUNjRiLZTYDfrdsf/BWR+QL08llYWRNNDhVAddWJAbmh
ZIEA2S8kmdH+ZIkAvbHJ19qLnCZAf92ybdqu5EwBps1ao9CPR84W4PqG7Rea
bcm5AuwKn3qtzJLdS4DvqofVDq4hlwqgtmXXFYERu58AsRq7ih2WkSsEWNQ+
78fyReyeAsz62Ddxii65VoDEzhzfAdrsvgK825Zx5IsmuVWAu818rboJ7N4C
PL55q0/5GHKnADrFOrr/jWD3j8XdW/NKMjns/rEoe+CVGN+P3T8We5Y6nQno
xe4fi+IxeXOd/jbQ/WMRPam6r1UnWTMWH05s1V35hawTi9wLv88uaCPrxUL0
Zmz6zDdkxKKcb39tUgPZOBYei5avHVNHNo9F9k3eHJWHZJtY9Jln4Df4HpkX
i98rAvv2ryC7xYKzPu53nzIyPxbY/Gu10kVyaCx4XVu/9S4hC2Lha2f1W6mI
LIlFo7kJr28eOS0WXKMn4wceJmd291kmXDY0i5zd/f3UP7qimknOjcUXq437
uenkou73C9hbNzWJXBqLtJyxoXMTyPJYSOq9un9JIVd0v//FgY/XhJOrYtHL
RbLLPpBcG4vVmU4XvHzIDbHQPa5hEO1Gbo1FfbTVjG2O5Pbu73t7UPgRe3Jn
LJq+DtS6YE1WEOLo0hzDGnOyshAFh0quvltN5ggR03jvcK8VZNXuz5v5fByn
z+4vBOf6yAOLF7D7C+F2Zs1Zuzns/kJIxqTPD9di9xeiSuTK3TuF3V8IWW9T
/0vj2f2FMDco13o1mt1fCE8PU0ulEez+QqzU29o4g8PuL0R5e3q9VT92fyGy
HM1WRPdi9xeipVJbx+LPS7q/EB9L6grzPpMFQvzdkNlH6Q1Z0v28VMdFznXk
NCHOm842uX6PnCnEP+m/+VPLydlCjDa7qph2lpwrxO/j3gVd+eQiIXaf7dJ1
zSaXCvEp0zb7UQZZLsSNYEGbkZRcIcT+GN7oS1HkKiH4b95p6fqTa7v7vRqs
UeRKbhDi0fHLPWZuJLcKURPafK1wLbldCA+Jn+9sQ3KnEEZD1iqe0yMrxKF2
lXu0gRZZOQ6rXPKa7o0nc+KwIv2X7uYRZNU4KPw0DGjvR+bGoe8V7/3x/+rp
/nHQ/73xjHoHWScO8vKOC6WtZL043FQfc8r6BRlxKOlzJvNHNdk4Dg3+B/l7
b5DN43BgedlCgwtkmzjomP/48f4EmReH0i3jjmceJrvFYdZU1bXGu8n8ODha
XH73M5kcGocnPh8ii4RkQRze/41Rcg8hS+KQ67NWMsmLnNY9Hz63ZyOPnBmH
RbN7hx5eT86Ow8dPmS1uq8m5cRi15ZqFjj65KA5pIRvP/5xDLo1Dr5GzxlVo
kuVx+PxvhDBTnVwRh8LaF42eQ8lVcUiftn6FQR9ybff780yOjf79gu4fhzs3
k/t1tpNb41CV2Or7pJncHgf30sm15+rInXFwnT/U8MB9soIIz+4HnBZfIyuL
YKkxbFrAOTJHhOclJUccCsmqIoyqn6hpeYjMFSHo3thTRplkTRFmZngY6ieT
dUSIGHbr5QIhWU+E031+ieaHkCECX1E+V8+LbCzCCY/HnxY5kM1FUIr8VWJg
TbYRoWDFe5mpCZknQuVxnpctyG4iHLZXsXfXJfNFONZ41S5yGjlUhAsZ6u7p
48gCEfx31Ivzh5MlImjVnTt7sy85TQQHDaeuN3+f0/1FkCslr+nbQc4WYUdd
6+mZb8m5ItyrmKyzoZ5cJILHtW9XhA/IpSIckPV0OVlBloswIef3uMZL5AoR
vOySPo8sJleJ0KPSvm5tLrm2O79mxDPZfnKDCCNHOnZUpJNbRXDp2Ty5n4Tc
LoJBhWGAWRS5U4Sbdhp1O/zJCvH4FjDVvmErWTkenalfurQ2kTnx8P3APR1t
QVaNx/cky8QaIzI3HtDRFExdQtaMx0nbRdvjZpN14pFuonm9YQpZLx7CPtIR
y9TJiMeLNd/Fh4eSjeMxfH8ftf7KZPN4jJtleTfwzzO6fzyaFX1yXn0h8+Kx
5+b73etayW7x0G/ffPraCzI/Hv2P23xZ+IAcGo+aWjer0xVkQTySuWOf6Vwm
S+JRUtdbXFRMTotHnVqBzZzj5Mx4/CrYa34ui5wdDx2Vzb4GGeTceLSmRJy5
JyUXxeP4gIiJm2PIpfEInv/6XHsgWR4PYx/dsAQPckU8/rv+w2Ecj1zVPe+T
H3hhPbk2HmtP3j9pZ0JuiIfu96ZRf0BujceEi27/5cwjt8cjcd8TL5MZ5M54
VDYW2PwYT1ZIwOk0R7+jI8nKCZhq5XfWZiCZk4DzaebTB/UkqyZgtV3w3Rud
dXT/BGwP2pAl/EjWTMDzDVuzljWRdRKQO1n1Xs86sl4CVpyt07p1n4wEBKeM
vbztOtk4AdMb1sVsukA2T8C41Fd+M06SbRKwb8aCnX+PknkJGNJZ1vZgH9kt
AdX1LUEF6WR+Ah5HDJ4tkZBDE2A7Mnv81miyoLv/0b+GqwLJkgT8rkzZN9OD
nJaAW49OaY7kkTMTwLlS+VbRmpydgFMzFzR8NiHnJiAsxHZA0zJyUQKKdkl9
ns4nlyZAZYFGnxotsjwBqUUJj+9OJFckoO2P0os7o8hVCWis/KN2fzC5NgH5
vlfTHvYmNyRA4e3RpS9+PaX7J+DVqx4abz+T27u/38JJhp0t5M7u+5jy9vWr
JyuIMdil10zuQ7KyGHeMt3Tp3SZzxHD9eumvlZysKsaVvl5LA0vIXDHU6opL
dxaQNbufZ1/vfTGHrCNGhM6czc2ZZD0xHA92SoekkiFG48GAz4gnG4sx/V5L
RkAE2VwMf89dgcf9yDbdn99anvZ6K5knRpZd/tuxm8luYuTFJcdstiLzxeiq
PGpxcDU5VIzI67OdWkAWiPElz/OkznyyRIxRPNmSKC1ymhhH/W70uTuRnCmG
oYo1h6tGzhbjzFSfDcEccq4Y9+YZvLivRC4SI8i7V86MP7V0fzFeHms+kvSV
LBdD4q7y9tNbcoUYi15e9bRuIFeJseblyJnyx+RaMfa9NdDRuktuEKN4irf/
/nJyqxidXlc6OOfJ7WJkz3M4Ky4id4qhUhB6vscxsoIEj7Om/Y3eT1aWoEq2
R/hvO5kjQczOd0ZxMrKqBB3pi8z6xZK5Esz/XbAjI4SsKYFtl/3YCT5kHQly
7N1aTzmT9SRoPPTu68qNZEgQ3/kH9evIxhLUal+4H2pMNpdgU+WC7BH6ZBsJ
6jpTT53VJfMkuJxeo2Q/g+wmgRFXZX/PiWR+9/MeuQcVjiKHSqC341WqPYcs
kODJh8S2gX3IEgnGqocklv15QveXIH9QkVd4BzlTgkP2Bmm678nZEsw01/v+
9RU5VwLPV3uyztSSiySYXuonDb9PLpXg+/TyEoMbZLkEuwwzJg+6RK6QwOp8
a+3zYnKVBI7fy+4W5pFrJVgwbFJv0UFygwTvnvePsc8kt0qwpzp0kV4quV2C
W+PdFo5MIHdK8LDoUURXJFlBCn2Vi//qA8jKUizYPfzGTQ8yR4q/C5/cK3Yg
q0qx5L+fow7ZkLlSHNoQeGzHWrKmFKob9EISV5J1pPCMXiAVLSHrSVFq7f5C
MJcMKS6PKw0QTCcbS5FaNdw0bgLZXIrakd6u0lFkGykE9v+VpXPIPClGX5bz
DvQhu0kRrbINJ/4+pvtL0e+bkmPZN3KoFGHH+16vbSMLpMDCGPcvjWSJFH09
TNcOfkZOk2LLWatg7RpyphSTNoXXW9wiZ0uhbZklDpOTc6UoN8v2O3SWXCSF
YfnmfVWF5FIpDr4u6dPjKFkuxfAsUfHc/eQKKTKO5hzwzCBXSSH2fld5JJFc
K4W5xly9RiG5QYovV62bJoaTW6XI75pStdWP3C5FyorIX4Vu5E4p5rye7Nq1
hawgg0lV12CjDWRlGUwfXe/cZUbmyKAeacdtW0FWleGkSkLC8iVkrgzycyrT
s+aSNWXYaPRo4O/pZB0Zrrmkztw0kawnwzvRwOSramTIsKB+5NSpQ8nGMpgF
BSlm9CWby5Ci2qaq2INsI0N/R3gFdD6i+8ugWKr7u+UT2U2GK2tSKra0kPky
GE3qX11XTw6VQbW/l4rtY7JAhqfZvjvq7pIlMmhZPTDfcp2cJoOzs6VRy0Vy
pgzLXueF+p8mZ8twu2h7k0IBOVeG1/E3ZOmHyEUyWL7/6TFlL7lUBjv9FtGV
dLJcBskZ1NrJyBUybNtwwbkrllwlw1ClftP2hpFrZbANq58CP3KDDLoGbze1
upFbZai7/bRyO4/cLsOuDZv9DGzInTIU95lk1rGWrJAI48ePHY4bkZUTMXDv
+AIHfTInEYb9C2eozyerJsL1/KTGZzPJ3ETMGa11f/9ksmYiHAXe7Y5jyTqJ
yFBPXDl9BFkvEerK06q/DyQjEf30PqRe7002TkSlJFi4689Dun8i1p53zfX6
RrZJRK7fph4rPpB5iRi/sCuJ20x2S0T/hCer/z0n8xNx6kTGwlcPyaGJ0PhZ
ufHGHbIgESbpIwsLr5EliTiaypm15yI5LREbvpk1SU6TMxPx5ZT7zfACcnYi
Uo58f+p7mJybCGmmbLTbPnJRd/+V5xKdMsilid3/X1GZ5phElieinK/z3UlE
rkiE3si9n9wiyVWJWHG/ScUvkFybiPmD9rlFepEbEuG81KxF5kxuTURPuXjb
Pntye/fn3z1wPWlF7kzE0AGXXG+ZkhWSEOZ9J63JkKychEnmsibFJWROEva0
RzlM0iWrJkFfrNVnlRaZmwTNVWMf8TXImkmwdn94e686WScJnqMetNxSIesl
oU22b/qvgWQkYWT7yR3aSmTjJHyL3K6x9e8Dun8SnN3kdQe/k22S0PdDyemX
H8m8JNiu7jjFbSG7JeHU9Y6Hzi/J/CQsyp+jVvCEHJqEAWunC7/fJwuSMGHQ
+gGGFWRJErzXTi3NkJPTkvBGNC6+tZScmYTgGYX++ifJ2UmYUr1asPs4OTcJ
gwZ4/Pf9ILkoCTHxMV3We8ilSWj+9sfpfDpZngTFKRvauInkiiRUd/zaJosj
VyXhpJm91Y8Icm0S+Hots7cGkhuSsKqyn1adF7k1CUPnzzUwdyG3J2FG+X2/
W5vInUk4cd/4wgprskIyPB73HXvdjKycjN+ekbuNjMicZHxGX627+mTVZFyb
oFq7Xo/MTca334P3vNIhayZDu87anz+VrJMM0+Z1PMUJZL1khHm4OO1SIyMZ
urUd4drDyMbJiJY7Hr3dn90/GS1POc1uvdj9k7FLgTev358aun8yRPOLdhd+
I7slI+g4b5D1RzI/GUPz7m9XaCGHJmPMWbuphS/JgmR4h22+t7mWLEkG98Y8
4dBqcloydh5YanjrFjkzGRfmVQ2LKyNnJ+PNe8N2/Qvk3GRomX+r/VdMLkqG
7eQFd8sKyKXJGO689Y7kCFmejN5zHj9al0Wu6O77ua5VfRe5Khl5urd7fUgl
1yYj9fYPzSsSckMyFp8pscqIJbcm490cW7FXOLk9GQFXdORGAeTOZIQPSPmr
4UVWSEHKgKvL+riQlVMw55Oq9P0mMicF3IlND2qsyaopmL+BP/7SWjI3BeUR
/fzyjMmaKcgo/3t1zzKyTgr6HskclrKQrJeC5c8muIjmkJEC460tZ6JmkI1T
8C9Nu3e4Btk8BQmtyy3CxpJtUjDWyGtfxEh2/xREVH16LeCw+6eg6OtwDWlf
dv8UBHqNd8xQZPfvzje0253zq5runwL7Bz1vF3eQJd3vW+bw9eYHcloKjvU9
O/zlG3JmCiq+rdDqeknOTsEGDfPFI56Sc1NwKXHEsnk15KIUKPo/XWhbSS5N
QXVIrWbMNbI8BdcyLPrlXiJXpMBmVEL9gxJyVQpmFRUdViwi16ZAZ8tg+7nH
yQ0pCJbU93TPIbem4Ph7273Ze8ntKVA+dnH8swxyZ/f3pbdsp2oKWSEVV6LH
d9qIycqpyDi/c+U+AZmTijOpTwWvw8iqqRitNOHo9AAyNxUDEo+dCfEia6ZC
60t24Q0Xsk4qrgYbpqluIeulovDiTVtvGzJSsa16S7/r66r1/wfh95Uu
     "]]}, 
   {RGBColor[0, 1, 0], LineBox[CompressedData["
1:eJxVmnlUjev/hpMic+Y4oShCUZmKcCMJIRSV0KBRNM/Trr2rvZsNkTlOkZOI
YwihTEUoY5GhEJWQOU747t9a722t3/nHutbTZ9/vte9T+32ed2s6eS9xUVRQ
UGhsr6Dwf//+//9apvPfbynfKr78eC+wAnqaZe5u/kJWwbcddl4vW8iqWDnp
lPGTN+Q+6P15eMeqV2Q1dHo+9P7tOrI6Fs/Wyr75mKyB3luyA65XkYciRzRo
Ttkdshbi6lXUS2+Sh8P6Ye2nq2VkHdRnD6kovUQeBeMr0w9fO0/WReibsxtu
nCaPQY+f3cMqj5P1kdD7uNv9I2QDHI0YvqLmH7Ih4s7UWT3PIY/DbLGjdVMW
eTysSzRXftpBngDHTbu9fm4hT8R8CyuJykbyJOj5X8juk0I2guMl+1uaUrIx
fHUPttMXkydj9B3N6dOjyFOwoatpwqJQsgnq3FIeOQSQp2JTdrixvzd5GqxP
JWfHe5Kno8u1aeo7XMjA7YmqewscBBYB3zZEjytdwfUZ+Lmny72ny7g+A7vs
xom/Leb6TJx6Hzij5wKuz4RtyZIeuuZcn4ULLnPfzpnF9VlYcOBhzZppXDfF
Bom4JtaY66bQ0y9t3jue67PxRVVb9eJYrs9GRckgsxejuG6G0z0N05SHc90M
N9u/eKOjyfU5MKg4ar9AnetzMODZkOd+/blujpI7hyO29eK6Ofwja3VLunF9
Lta+mvipUYXrc9FoPr6ytxLX52FInxWXp/1+J6zPg8EbvUrPHwIrzIdBztjP
W79wfT56Lnihf7WF6xbYq3kj/ssbrlsgI2PdV+3XXF8At0XzRcufc30BXEY2
aiU+4fpC7DUof3mumusL8eZgYPHHu1xfhGsd1xXqVHB9EXw/T7i5+jrXLVFi
Yf176xWBYQljTctFt4v585Z4fyLvXJcigYstIYt9O2/OKc4vxgTDHd/Exzi/
GLv+nny5JJ/zi/GkYfFRhYOcX4y4OW4XkM35JYgzavc+Zg/nl2CI+35c3s75
JWg88eR4xy2cX4LT48dYWGzg/FLkjBrScWMy55firarRq+oEzi/Fp00KTRpi
zi+F8SaF3p5RnLfCHM1ix+OhnLdCnrj0we8Azluh0XCPn4UP563g8ahiwva1
nLdGoM1zjUZXzltD+/zq8cZOnLeG9aLbPokrOW+NrbHFDx7bcH4ZtNudctW3
4vwyPNw/TTNuEeeXoVtsXYeaeZxfhoN3R6oZmnF+Ob5132edOIPzy5H/8N6F
FyacX47bXRYsn2bE+eU4cCRDffs4ztsgv91k1W9jOG+DUJ8rhtajOG+Dazsv
SY5rc94Gs22LO/TV5Lwtdv0z53SQOudtYV1av/Nhf87b4kr/Ecem9ua8LZQn
Zn7f153zdnjy9op/p86ct0OOyVRNX2XO22Hu4iTFRwqct8Ow5Klqpm1vhfkV
+B5V53Tkm8BYgfvNSi/++iSwaAW6XJ+wTfZO4OIV6GSiGN/ayHl7OG5rPehe
z3l7ZHgcUH5Uy3l7DHLZtc3iMeftMT/Qw7W4ivMroX18u9eEu5xfibVexYfy
bnF+JTwGeI4Ydp3zK/HedcSTHVc4vwrGBtJbfUs4vwoVEvW29CLOr0Lk7gDX
boWcXwW9Nxrdk/7l/GpUdTz2qdMRzq+GR0lh/8R/OL8aR/tcDeuyn/OrMWHM
2kGpeznvAGNPY4VeuwTWcEC01cVhWzP5eg5YkLtVOmizwA4OmGs5f2xOGl/f
AYtdvdXGJAmc5YDIcVtMC+OZ54D6sUuOz4oVuNYBuxQnuldGMt8Rm2LuOawK
Zb4j1h0t3v02gPmO8L2SMjTKh/ny9SEVzT28mO+IjEVqv/a5Md8RLn1+Lpvk
zHxHxNn1bL2xivmOOGrSWOdsx3wnbGg/oG+bNfOd8Lf2hI0Zi5nvhL5z7tjq
L2C+E/KN47xumDPfCXvbnl/3MGW+E2KKRIEqYL4Tetz95JU7hflOGFZ6++jc
Scx3hsyiwLTZkPnOeDJLe3j6GOY7Y92Zq8smjGK+M/o2jaqq0Wa+M7SNGw6I
NZnvjBGTM67pDmK+/PXyykyq1JjvjHahAxTFfZi/BgaFgwfqqzJ/DcrzvOOe
dmH+Gpwr+ds0tSPz18Bj0xKb6e2ZvwYJ9b1LPvxqFvLXoPFAdHTOD4GL18D3
i95mu68C167B7d6nfqt+FFjBBaH+/14seyuwhgscj5x9EtMoMFzwPtl9sUm9
wA4uuPDfksGttQKLXJDQt8/sE4+Z74IPg2Zf9a9mvgtcYqP3jbvHfBc0PrR/
9LmC+a74/jJo/aly5rtiRYrb6vBS5ruisb4sH5eY74rQURPsOl5gvisOXDBz
qTjDfFccNMysyDzJfFfoGV/e5nyM+a4YcNTl8tjDzHeDf1Z/y58Hme+G0RMC
p97IYb4b3lwekLJzL/PlfCNr+vpdzHfDtQ851jO2Md8Nc39fruibwXw3zGjY
dvhNOvPl61eLP15MZr67/PPi/s4dUua7Y5AsMD9Qwnx3bHA00V4sYr47+vYr
VRoTwXx3pEQfs+gawnw579zx840/892hvWGI2k1v5rsjb3/NziNrme8B2fx1
yZvcmO+Bbr39Xoc4M98DeicSDq9ezXwPrOhu8XzOCuZ7YP6QlWKD5cz3wLmu
thvVlzLfA4uGPO3RaRHzPWB8KbHt6zzme0Jb+tPmlRnzPfFB47521UzmeyLQ
ucD52jTme2KB+Zje5yYz3xMHm96OPzaR+Z5oL029lmvIfE98jz5yO2sM8z2h
bNWyYPso5q/F3AMt0zKGM38tlk+zzNkwlPlr8f7X4Zi0wcxfi9L3h+6lDmT+
WlgbNe1O68f8tZBpdKzb0Iv5a5Ghmr0jozvz1+JoumPF9s7M90KdeW3E3g7M
90KOQkn2QUXme6Fqd/acf3+9EfK9sHSkruv5HwKLvHDlcqtC+VeBs7zgfDxP
7eFHgYu9cNr2VX7DO4FrvbBo/LyS700CK6xDQl3I0q6vBdZYh9nqfVw0XgiM
dThadO7rhGfMXwflwv6dFtQwfx1Ga1ze6VLF/HXIGOZyLPou89fhS9dd83ZU
MH8d6md2dy0sZ/56nJuzQrmqlPnrMeX08JHfLjF/PWZb9r6jVsz89cipvaRg
UsT89ThhU3PCoZD566FX0vYh/jjz16PcpPzE4QLmr0c3laZ21YeY740vIW0P
FA8y3xv5v3ImjM1hvjfmayYOXrmX+d6QxVhsTN7FfG94VKdvOLeN+d5Q/vZD
vSWD+d7QuzpmgtZG5ntD06zykW0q830wP1XcfUOiwKo++HCjufJaPK/HB/Vm
BUOVxALr+0BvuZ8Sonl9Pri9viooMlxgSx+s6yMJKwrm9frg+wt11Z/+Avv4
wCPVzGi6D69f/vMPcz7Fegmc7oNue57NLHOnjw98b2YO7+EicIEPAl2D9ix3
pJ8P1kYPOrx3pcCVPriAcUvf2tLXBzn19mmTlwnc4oObZ6c7y5bQ3xfthsVU
PFxIf188Sb56b/R8+vsiNOKEf/Qc+vuiR/ynQ/dm0d8Xfy8cHjMa9PfFiaRP
LWIT+vuiUbHdzydG9PdFjuxzjvEE+vvimlJA8xYD+vtirrv27S969PdF3cnD
VstG0d9Xfr9+MrhwOP3l6251k9WH0d8Xq/tV7Y4ZQn9fuMyZmt3wF/19YTDz
zPzFavT3w167zxln+9DfD09aNohH9KS/H777GPfN6EZ/P2xasmG+Umf6+yFS
DSMCO9DfD7aWzbmvFenvh6kbTW6v+N0k+PvBWlSVdfs/gUXy+avOanNbBU73
w4cBUqOLnwXO8sMDozftpn4QuMAP7xvHBZ5+K3CxH0a2qWya1CRwpR8WmPW0
P/VK4Fo/iPd/qjR6IXCLH7opLv949pnACv64afq8GI8FVvVHo4PJ1NJqgTX8
4b2wq/ui+wLr+6Ou8/cZD28LDH/czzxYvuaWwJb+2Pb7svLH6wI7+KNk3scW
USn9/XFJVp3S8zL9/bGhYvCTv4vp7y/fT3s9m3SO/v5wuu6WcfM0/f3R7d/C
32tO0t8fnTp1GPLrGP3l+U1fP2Ueob8/2gUbRk84RH9/6N5aXXI3l/4BGKU6
/Kx/Dv0D8Mhed13fffQPgNfdAdWFu+kfAKWNGW0rd9A/ADhhVqOUSf8APFh+
LyB/M/0DoL6x/tryDfQPwM5QzZr2qfQPQIHG2INHE+kfAIUtJ8Y7JtA/AFov
V0T1ktA/AEN7Xou/IqJ/AFQHZy8Mi6R/ADZ32PxAP4z+AYgonj6kMYj+ATCd
snDk3/70D0Tuatcvq3zoHwjdHmMl6uvoH4iTwxY9qPGgfyBUvNc173SlfyCs
zuiXrnamfyDKrkx303KgfyAGms+42WRP/0B0fVfz/Zgt/QPRanvybcQy+gfC
bljwQfOl9A+E/YPLev0s6R8Im0+zw+st6B+INe+yNp6cS/9AVI+JCJCZ0T8Q
97pHaa6aRX/59T2y2D4e9A/C18rUZ12n0j8IippNH14Z0z8Inm+U7lycSP8g
9JoRJ8oaR/8glA3t+Stan/5BuCxaON9Rj/5BMJz8wt10FP2DcEg9cPnIEfQP
wsUXB/uratE/CFFGI/5p1aB/EGoLNvZ4MYj+QXCq2GBeMZD+QQhTvG59rj/9
g6CWXTspvw/9g6D1Pez97p70l/sZTIvc2J3+wVB1qahL6EL/YGhk3h0UrUL/
YPw68d4gRJn+wXi5sWywvyL9g6H0RrHe+3ej4B+Mz46z4ta3CewQDJPYMQre
3wX2CcbVIvdlvl8FFgXD3n2LNPCTwOnB0C1ZsTW8ReCsYOg32IvFbwUuCEbx
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
jUoSNveeNvS6EftPwrKzXTar/zn/SUL2z8xFvjwf0kjCO7s4qzIT9p8Es0ve
+zR5vqSfhLotX40ief5kJH/9/af614D9J8FrvOW0KTy/Mk/C4M/2h3bNYv9J
yOwS5qjI8y+bJIh6z1rpwfMxhyRc7r90z5057D8J6pmmI6bxfM0nCenSo5/z
5rH/JCgtGddRnedzoiScv+O0KpXnd1K5z6rq74o830tPAkpGPwz9c/6XBJsp
n//7uJj9J8EnvsxxPc8Pc5Nw4+60zs1W7F/+8zebP6/l+WNhEgy3uGm+W87+
k6BbPivNj+eXZUlwEved9t2O/cv9LH30Ynn+WZ2Ef/DavhvPR2vlr/+4643t
q9m//P0d6R82iuerLUkYn5fnVuTE/pOQ7zhnkyXPZxWSkVv+oO2VC/tPhuRV
49/RPN9VTcbXMarSgX/Of5ORubc695Qn+09GwNnbyst5fqyTjJ1hst2t69h/
Mo6tSvHb6c3+k5Hu4Rkzk+fTSEbxkPzrTX7sPxm6sroFGQHsPxmbDTZ1nsnz
b5tkmIxcoPAhmP0nw1d5+5h9oew/GVp17TOseb7uk4zYlX3GdeH5e0gyIvZZ
qVyKYv/y+dUL+kSK2H8yDpXHLzPm+X56MvockN76Jmb/yTg++VF4YRz7T4aF
reKq8AT2L3+/VicEgM8XCpJxbuL78x35/KEwGTqLL5jcTmb/yXh6OOLtzlT2
nwyjx3mVnny+UZmMxx8r6yfz+Ud1Mmy2e+t24/ORWvn1qHTJrstg/8no1364
ReFW9p+MhU9nam3Yxv6TIYp+MdqLz2cUUnDIXuY0l89vVFJgE3miVIfPd1RT
oBHeYNf5z/OfFFjH7vvr3T72n4LNS5w73ctm/ylwn/7PsKL97D8FT/W/euzP
Zf8p0M6+UrPxH/afAp1DW0JiDrH/FGh9fDXd7zD7T4HlyXEGLnz+ZZMCz8rv
8+34fMwhBU4FJ9IW8/mZewqaV734bx6fr/mkQC3qV5oZn7+FpEBlXux8Uz6f
E6VgzbZGPVM+v5OmQP3p4YlmfL6XnoKP2hYu8/j8L1P+en9NOW3J54NZKahU
+mJgy+eHufLXL/t4y/kq+0/B79eH0nzK2L/85+N3+EdfZ//yPNeJYek32H8K
jr7+vO/vW+w/BV27L3xbWMn+U9ArstCm8g77T5H/vv3zsvEe+0/BoPfb0pX5
fLUlBZNd21YM4/PX1hT49JhjNovPZxVSkXv+3UKXJ+w/FY+b3QJlz9h/KgoK
h58+Usf+U9Hn9e4B1S/YfyoevZi1RZHPj3VS4XhROmYsny/rp0JrWm3dyib2
nwqns0VHUpvZfyoK56RvLXnH/lNRsv1G5tcW9p+KQ/1eHNPj82+bVLwsM613
/cL+5dfv6TR23zf2L2fHQ+nPvrP/VPxTvFFlCJ+/h6RCzTxui8Mv9i/3c/1k
nK0gPL+XpqLnZIuPjYr8PkIq3NN+nTfg8//MVLS+CNkT3pHfT0jFPZeRm0o7
CZwr9/scua0vv19QkAolzZdHXboLXJiKo2Ov1ZxS5fcXUpHZf3u/rvz+Qpn8
/RBfcnTqy+8zpCLi7tGiM/0Frk6F9V+3h/fl9yNq5XnaKXt81QVuSMVP38XD
Kwfz+w6pcDCSndHn9y9aU2HmtmfFpmH8/kMaAnN+qbRqC6yShvVLel5cpcPv
Q6ShLX5GfOkogdXScK/vdyvDP98PSYNu8l69PWMF1kmDg2F2j+78fol+GiRd
PX9EjRfYSP56j1a8/TCR359Ig9Zfz1+7GjdO/x+LHtoG
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
1Yfxh6h/j8+0Nc/eHaD+CXCqmOF2eh/17/m8K+RxcXupfwL0C2QGlrupfwKe
X7eMGJNO/Xt8332x+7yD+vOgpp1660oa9efBYMq6B2mp1J+Hy+vtg9nJ1J+H
zTlFPf/7nfrzgJqMMHUp9eehY9TIp20i6s/DkjiLuppE6s9DZdZGz3w+9edh
dIWTPCmB+vOw8lmgpV889efhavC5Q1ax1J+HxbeMUmdFU38e2MULRqpHUn8e
Ku6eNPwXRv15iDYsf/suhPrzMPZUquH9IOrPA79cf+QVDvXnIVNYnJrnT/17
Pv+FNYf3+FF/Hj5f+rc2yYf683Bxz8ftsWzqz8PIvpM5gV7Un4ddptVvvDyo
Pw/1m3982+xG/XmwfH4+3Z5F/Xno33fKI2tn6t/zeU67FVg6UX8evvpFjTPf
RP15UNwk1DXbQP17Pp9RZqWZPfXngZN+r4/leurPw1CPxfVrbak/H6WOX1fb
WVN/Pu7e77Z0sqL+fJy5yv3iYUn9+Wi+JJocYE79+Sju1u2KMqX+fCzyDmSL
jak/Hz8DIwPSV1F/Pt4vtVHJWUn9+TBNUra4BOrPh1fx+Qk1y6g/H7xar+TX
S6g/Hye3Tkv/vYj683H80YhFqgupPx/5LbPCZ8yn/nw4L91pZTaX+vOR8ca8
1Gs29efDPtftTqIh9edD+P1j0FF96s9Ha/m3M5UzqD8fQ64LUj5Po/4974an
+g2fSv35GPqDr7ZQj/rzsSxFqcxVl/rzETvRSlGmQ/35Pf9/cvOHCxOpPx8+
j1d6vtWk/ny0OSjFjJhA/flQTimesXoc9eejrsg9KnwM9eej5eRAt7zR1J+P
TV8uv2kaRf35sBVze6urUX8B5s9zKbYeQf0FCDd3HZo0nPoLsOV8cneFCvUX
YIlSi7jvUOovwMMAyQmjwdRfgEtnPQIEA6m/AB3LRbcrlKi/AL1H/SxTVqT+
AuQ3XLSz7k/9e97v1fHT+1J/Aebcs1zT1Jv6C8Bz0D09tRf1F2BytOfpsH8d
TH8BlrUOtir/yzBHgIIB2omqfxiOEGDMyWMOHr8Z5gpQxdl/43wnw2IBZMFK
d5V/MpwqwPmoj8GsHwxnCND9duXZC98ZzhIg7JRqqkobwzkChIRuHuDbynCh
ADFemho3vzJcJMBCO6dKnS8MlwrgdUJluOATw5UClEQt+fnmA8O1Anxybgw3
ec9wvQDcve3b85oZbhKgYVCsxbC3DL8XYNq00P0RrxluFcBc+ans5UuGOwWo
2JijZtnEsEIibno0LC5qZFgxEYOGB/2Z9JxhlUTcf+2xYeczhtUT8fTnybX9
nzKsmQibAVavIuoZ1ktEtddClS+PGDZIxMr+fk/cHjK8IBFtnBdLnz5gGIkI
rZYtXXefYdNE7HvuV19dy7B1IuK6w4eY32V4QyLc9I6+uFnNMCsRl75+tTC5
Q/0TMZlrtq6yivonwvdo/g/zW9Q/EV4VQ2bfvUn9EzGiyXOgXQX1TwQv+Vhc
Qzn1T8SjAbdkntepfyIw7urc1mvUPxF9F8dFxpRS/0T4sH87KF+l/omoMpl8
b3cJ9U+EUK3zzdTL1D8RvQtctpdcov6JuBhn3WBzkfonQmvP5avvLlD/nl45
O5fGn6f+iTBquWOnfo76J2LRmnWKZ85Q/x7/paPt1p6m/onIfjhkyZdC6i/E
3QrtEtlJ6i9Ep5NJ/YwT1F8I63i2vDaf+gsxvTC0ISSP+gsxavDmGxq51F+I
aqtBpmU51F8I81scD99j1F+Ie77hGmpHqb8QX0sH+ZQdpv5CiL+OXcfJpv5C
NJ3b/nDCIeovxJFgp2+1WdS/5/NOcDvKP0D9hQizSmmfv5/6C2E5s+bZl0zq
L8RsqaLTkb3UX4htlZNDnfdQfyGCP42YPHo39RfiaGpR4MN06i9E2bff67fv
ov5CzHtzvdZ2J/UXwvnJ7zeqO6i/EMJG4bZHadRfiIH7rB7t2Ub9e/78pgVn
WKnUXwiNzil6einUv+f7bVec+01O/YWIZl96Uiyj/kLcGaitJk6i/kL0NZz8
0U5K/YXIuZlrN0lC/YWoc9y2oUNE/UVwVLvSVimk/iLcv6yqsy+R+ouQfyrk
c5CA+otg215mYc6n/iLM0mpaoc2j/iK8CCyo+cul/iJMKhnY9iSe+ougFf4s
70Ic9RfB6dSfrl2x1F+EtxprX4XHUH8RvBROO2+Kpv4imFj2DVwWRf1FKBfq
jNaJpP4i9H3Uaj8wgvqLgG7jqe1h1F+Ep659tzeGUn8Rwnr131YVQv1F0I7R
0ykKpv4ieA81tTwWRP1FCE2HUkYg9RdhYcqXTVIO9ReBpzJ1RVwA9RdhbF1t
cbA/9Rehw/Bylc9W6i/CSq2Kre5+1F+EtAWVhzf7Un8R+p3YG7DRh/qLsMlh
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
     "]]}, 
   {RGBColor[1, 0.5, 0], LineBox[CompressedData["
1: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
AybfymS+K95f1Uzavpv5zXwr3WTtDua74saXTOupW5jvitl/rxarpzLfFVPf
bjn8PoX5zevX875eljPfrfnz4sH2bVLmu6GvLCA7IIb5bljnMElnvoj5blDv
UdBqZDjz3ZAUdcyiQzDzm3n7tqb3fsx3g866/hq3vZjvhqx9FduPrGa+O2Tm
a+QbXJnvjo7dfN8EOzHfHXon4w+vXMl8dyztZPFi1lLmu8O8/3KJwRLmu+NC
B9v1fRYy3x3z+j/r3HYe891hfCWh8ecc5ntAR9pk89qU+R74ovVAp2wa8z0Q
4JTjdGMK8z1gaTay24UJzPfAwXcfxxwbx3wPtJQqbhwwZL4H6qOOlKaPZL4H
VBbVWm4dxvzVmL2/dkrqYOavxpIpVpnrBjB/NT7/ORyd3I/5q1Hw+dB9RS/m
r4a10budyT2YvxoyrTZV67oyfzVS1TK2pXZi/mocTXEo3tqO+Z6oMqsM392a
+Z7IVMrPOKjMfE+U7cyYdfzPbyHfEwuHjnC5+EtgkSeuXa1XKvopcLonnE5k
aTz6KnCeJ87Yvs5++0ngSk/MGzMnv+GdwEprEF8VvLDDG4G11mBmn+7OWi8F
xhocPX/h59jnzF8DldyebS0rmL8Gw7WubncuY/4apA50PhZ1j/lr8KPDjjnb
ipm/BtXTOrnkFjF/LS7MWqpSVsD8tZh4ZvDQuivMX4uZVt3uauQxfy0yK68o
TTrP/LU4aVNx0j6X+Wuhl9/4Je4E89eiaFLRycM5zF+LjqrvWpQfYr4XfgQ3
PlQ+yHwvZP/JHDsqk/leMNdO6Ld8N/O9IIu2WC/fwXwvuJenrLuwhfleUKn7
1ac2lfle0Ls+cuyg9cz3grZpyWNbBfO9Ya6QdFqXILCaN77c+lByI46vxxvV
pjkDWkkE1veG3hLfVoji6/NG6dqywIgwga28saZ7TOj5IL5ebzS87KPW5Cew
tzfcFaZGJt58/c0//yjzm9hT4BRvdNz1fFqhG3284XM7bXBnZ4FzvBHgErhr
iQP9vLE6qu/h3csFLvHGJYxe+NGWvt7IrF6WPGGxwLXeuH3OxEm2gP4+aDEw
uvjRXPr74Kn8+v3h5vT3QUj4Sb+oWfT3Qee4b4fuT6e/D/bOHRw9HPT3wcnE
b7WSSfT3QY1yi6anRvT3Qabse6bxWPr74EYr/w+bDOjvg9luOqU/9Ojvg6pT
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
4zonVo5h/wlQvmDfdwTPZ5QS0eFH8q8Qnt+oJmJjtykDbhqx/0QsPtd+Y59/
5z+JyGhKm+fD8yGtRHyyi11UOIn9J8L0itcebZ4v6SeictNPowiePxklInXf
6Z4VYP+JWDPGaspEnl+ZJaLf92WHdkxn/4nY3D7UQZnnXzaJiOo2fbk7z8fs
E3G158Jdd2ex/0T0SZuhO4Xna96JWCc9+j1rDvtPRKsFo9v04fmcKBEX7zqu
UPD8Ttrss6K8QZnneymJMMkf/ijk3/lfImwmfv/9dT77T4RXXKHDWp4fHkhE
0b0p7T4sYv+JsL394ftqnj/mJsJwk6v2pyXsPxEjiqYn+/L8sjARjhL1KQ12
7D8R16y89cQ8/yxPxH94s6wjz0crE7HkSYdbW1ey/0RsGOoXOoznq7WJGJOV
5Xrekf0nItth1gYrns8qybG/6GHja2f2L4fkdc3eKJ7vqsnxc6SatNe/8185
tuwuP3Dag/3L4X+uVGUJz4+HyLEtVLazfg37l+PYiiTf7V7sX45kd4/oaTyf
hhz5/bNvvvNl/3IMl1VZpvqzfzk2GmxoN43n3zZyTBxqqfQliP3L4aOydeSe
EPYvh05Vy1Rrnq97yyFe3n10e56/B8sRsWeR6pVI9i+H90rL7hEi9i/HoaK4
xcY830+RQ32/9E6dhP3LcXzC47DcWPYvh7mt8oqwePbffL1WxvuDzxdy5Lgw
7vPFNnz+kCvHkPmXJpXK2b8czw6Hf9yuYP9yjH+SVeLB5xslcjz5WlI9gc8/
yuVYstVrREc+H6mU44Rq+4yqVPYvR4+Wgy1yN7N/OeY+mzZo3Rb2L0d01Mvh
nnw+o5SE7GUyx9l8fqOaBNuIkwVD+HxHLQlaYW/t2v17/pMEa/Ge3p/2sP8k
bFjg1PZ+BvtPgqvJfwPP72P/SXim/9N93wH2nwSdjGsV6/9j/0nQPbQpOPoQ
+0/CoK+vTXwPs/8kzDs12sCZz79skuBR0mBux+dj9klwzDmZPJ/Pz9yS8H7F
y99z+HzNOwmakX+STfn8LTgJqnPE5jP4fE6UhFVbavRm8PmdNAl9nx0eZ8rn
eylJ+Kpj4TyHz//SktCz98QzVnw+mJ6E4lY/DGz5/PBAEtoWfr3jdJ39J+Hv
m0PJ3oXsv/nn47b5Rd1k/815LuNCU26x/yQcffN9z9477D8JHTrN/Zhbwv6T
0DUi16bkLvtPav57++9VzX323/z7Pm9JUeHz1dokTHBpXDqQz1/rk+DdeZbp
dD6fVVLg4MVPc52fsn8FnnxwDZA9Z/8K5OQOPnOkiv0r0O3NTs3yl+xfgccv
p29S5vPjIQrYX5aOHMXny/oKDJxSWbX8HftXwPHc+SOKD+xfgTOzUjbnf2L/
CuRvvZX2s5b9K5DV4+UxPT7/tlHgZeGMapcf7F+B/R6Oo/bUsf9mH4dDKc8b
2L8C/+WtV+3P5+/BCmiaxW6y/8P+m/1cvhlnKAnP76UKdJlg8bVGmd9HUMA1
+c9FAz7/T1Og4WXwrrA2/H6CAg+ch24oaCvwgWa/7xFb1Pn9ghwFWmq/Ourc
SeBcBY6OulFxWo3fX1BgS8+tPTrw+wuFzddDcsXBUZ3fZ1Ag/N7R82d7Clyu
gHXv0sHq/H5EZXOeTtIunz4Cv1WgyWf+4JJ+/L6DAg5GsrP6/P5FvQKmrruW
bhjI7z8kIyDzj2q9jsCqyVi7oMvlFUP4fYhkNMZNjSsYJrBGMu6rNywy/Pf9
kGToyXfr7Rol8JBkOBhmdO7E75foJyOmg8evyDECGyWj6fHSj1/G8fsTyRjU
+8UbF+MGk/8BsxsXlg==
     "]]}, 
   GraphicsComplexBox[{{800., 0.3}, {800., 0.3}, {800., 0.3}, {800., 0.3}}, {
     {RGBColor[0, 0, 1], 
      TagBox[InsetBox[
        SubscriptBox["\[CapitalDelta]", "a"], 3],
       "InsetString"], 
      TagBox[InsetBox[
        SubscriptBox["\[CapitalDelta]", "a"], 4],
       "InsetString"]}, {}}], 
   GraphicsComplexBox[{{800., 0.68}, {800., 0.68}, {800., 0.68}, {800., 
    0.68}}, {
     {RGBColor[0, 1, 0], 
      TagBox[InsetBox[
        SubscriptBox["\[CapitalDelta]", "b"], 3],
       "InsetString"], 
      TagBox[InsetBox[
        SubscriptBox["\[CapitalDelta]", "b"], 4],
       "InsetString"]}, {}}], 
   GraphicsComplexBox[{{800., 1.32}, {800., 1.32}, {800., 1.32}, {800., 
    1.32}}, {
     {RGBColor[1, 0, 0], 
      TagBox[InsetBox[
        SubscriptBox["\[CapitalDelta]", "c"], 3],
       "InsetString"], 
      TagBox[InsetBox[
        SubscriptBox["\[CapitalDelta]", "c"], 4],
       "InsetString"]}, {}}], 
   GraphicsComplexBox[{{800., 1.57}, {800., 1.57}, {800., 1.57}, {800., 
    1.57}}, {
     {RGBColor[1, 0.5, 0], 
      TagBox[InsetBox[
        SubscriptBox["\[CapitalDelta]", "d"], 3],
       "InsetString"], 
      TagBox[InsetBox[
        SubscriptBox["\[CapitalDelta]", "d"], 4],
       "InsetString"]}, {}}], {{}, {}, 
    {GrayLevel[0], 
     LineBox[{{175., 0.}, {175., 0.019137924773532954`}, {175., 
      0.03827584954706591}, {175., 0.07977125652072599}, {175., 
      0.1185168331658782}, {175., 0.1565023754008899}, {175., 
      0.1977074750624958}, {175., 0.23616274439559384`}, {175., 
      0.27783757115528607`}, {175., 0.3187523635048377}, {175., 
      0.3569173255258815}, {175., 0.3983018449735195}, {175., 
      0.4369365340926496}, {175., 0.4748111888016392}, {175., 
      0.515905400937223}, {175., 0.554249782744299}, {175., 
      0.5958137219779692}, {175., 0.6366176268014989}, {175., 
      0.6746717012965207}, {175., 0.7159453332181366}, {175., 
      0.7544691348112447}, {175., 0.7962124938309469}, {175., 
      0.8371958184405087}, {175., 0.8754293127215627}, {175., 
      0.9168823644292108}, {175., 0.955585585808351}, {175., 
      0.9935287727773506}, {175., 1.0346915171729445`}, {175., 
      1.0731044312400304`}, {175., 1.1147369027337104`}, {175., 
      1.15560933981725}, {175., 1.1937319465722818`}, {175., 
      1.2350741107539076`}, {175., 1.2736664446070256`}, {175., 
      1.3114987440500032`}, {175., 1.352550600919575}, {175., 
      1.3908526274606388`}, {175., 1.4323742114282967`}, {175., 
      1.4711459650674468`}, {175., 1.5091576842964565`}, {175., 
      1.5503889609520602`}, {175., 1.5888704072791562`}, {175., 
      1.6305714110328462`}, {175., 1.6715123803763958`}, {175., 
      1.7097035193914376`}, {175., 1.7511142158330735`}, {175., 
      1.7897750819462015`}, {175., 1.8276759136491891`}, {175., 
      1.8687963027787708`}, {175., 1.9071668615798447`}, {175., 
      1.9487569778075127`}, {175., 1.9493784889037564`}, {175., 1.95}}]}}, 
   GraphicsComplexBox[{{175., 2.}, {175., 2.}, {175., 2.}, {175., 2.}}, {
     {GrayLevel[0], 
      TagBox[InsetBox[
        RowBox[{"175", " ", "G"}], 3],
       "InsetString"], 
      TagBox[InsetBox[
        RowBox[{"175", " ", "G"}], 4],
       "InsetString"]}, {}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(B\\), \\(0\\)]\\) (G)\"", TraditionalForm], 
    FormBox[
    "\"\[CapitalDelta] (\\!\\(\\*SubscriptBox[\\(E\\), \\(hf\\)]\\))\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  ImageSize->{690., Automatic},
  PlotLabel->FormBox[
   "\"Channel Separations vs. Magnetic Field\"", TraditionalForm],
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{{3.477844687672229*^9, 3.477844773851969*^9}, {
  3.479572518934077*^9, 3.479572549738802*^9}, {3.479572617149417*^9, 
  3.479572628445426*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
7PrSDDgbR4iZJDKxeBfJPOusZGq3/wWD64bV\
\>"]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exporting", "Subsection",
 CellChangeTimes->{{3.477227190296957*^9, 3.477227191546981*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</home/cnewby/SeniorDesign/Racah Sections/SeparationvsB.eps\>\"", ",", 
   "sepvsBplot"}], "]"}]], "Input",
 CellChangeTimes->{{3.477159566000732*^9, 3.477159594266062*^9}}],

Cell[BoxData["\<\"/home/cnewby/SeniorDesign/Racah \
Sections/SeparationvsB.eps\"\>"], "Output",
 CellChangeTimes->{
  3.477159597817433*^9, 3.47715966066151*^9, {3.477844706461566*^9, 
   3.47784477636297*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</home/cnewby/Desktop/csm-thesis/Figures/MevsJose.pdf\>\"", ",", 
   "MevsJose"}], "]"}]], "Input",
 CellChangeTimes->{{3.477675643139176*^9, 3.477675668098929*^9}, {
  3.47957866548436*^9, 3.479578676860413*^9}}],

Cell[BoxData["\<\"/home/cnewby/SeniorDesign/LippmannSchwinger/MevsJose.eps\"\>\
"], "Output",
 CellChangeTimes->{{3.477675656940174*^9, 3.477675669072499*^9}, 
   3.47784714632945*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</home/cnewby/SeniorDesign/LippmannSchwinger/deltavsgamma.eps\>\"", ",",
    "\[Delta]vs\[Gamma]"}], "]"}]], "Input",
 CellChangeTimes->{{3.477676048181257*^9, 3.477676058326334*^9}}],

Cell[BoxData["\<\"/home/cnewby/SeniorDesign/LippmannSchwinger/deltavsgamma.\
eps\"\>"], "Output",
 CellChangeTimes->{3.477676060745016*^9, 3.477847034586196*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Documents and \
Settings\\\\cnewby.ADIT.010\\\\Desktop\\\\a0list.dat\>\"", ",", "alist"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Documents and \
Settings\\\\cnewby.ADIT.010\\\\Desktop\\\\r0list.dat\>\"", ",", "rlist"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Documents and \
Settings\\\\cnewby.ADIT.010\\\\Desktop\\\\v4list.dat\>\"", ",", "v4list"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.476192063776256*^9, 3.476192078104473*^9}, {
  3.4761921090421705`*^9, 3.476192110260928*^9}, {3.4761921864957914`*^9, 
  3.4761921963083544`*^9}, {3.4765402329994392`*^9, 3.4765402447809153`*^9}}],

Cell[BoxData["\<\"C:\\\\Documents and \
Settings\\\\cnewby.ADIT.010\\\\Desktop\\\\a0list.dat\"\>"], "Output",
 CellChangeTimes->{
  3.4761920796982327`*^9, 3.4761921108546824`*^9, 3.4761921631518917`*^9, 
   3.4761921985739937`*^9, 3.4761922319023323`*^9, {3.4765402161866164`*^9, 
   3.476540245015295*^9}, 3.477227418816969*^9, 3.4772322875197587`*^9}],

Cell[BoxData["\<\"C:\\\\Documents and \
Settings\\\\cnewby.ADIT.010\\\\Desktop\\\\r0list.dat\"\>"], "Output",
 CellChangeTimes->{
  3.4761920796982327`*^9, 3.4761921108546824`*^9, 3.4761921631518917`*^9, 
   3.4761921985739937`*^9, 3.4761922319023323`*^9, {3.4765402161866164`*^9, 
   3.476540245015295*^9}, 3.477227418816969*^9, 3.477232287535384*^9}],

Cell[BoxData["\<\"C:\\\\Documents and \
Settings\\\\cnewby.ADIT.010\\\\Desktop\\\\v4list.dat\"\>"], "Output",
 CellChangeTimes->{
  3.4761920796982327`*^9, 3.4761921108546824`*^9, 3.4761921631518917`*^9, 
   3.4761921985739937`*^9, 3.4761922319023323`*^9, {3.4765402161866164`*^9, 
   3.476540245015295*^9}, 3.477227418816969*^9, 3.477232287551009*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Momentum for \[Mu]K temps", "Subsection",
 CellChangeTimes->{{3.476540667617159*^9, 3.476540681570552*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 SqrtBox[
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]], "*", "8.617343", "\[Times]", 
    RowBox[{
     SuperscriptBox["10", 
      RowBox[{"-", "5"}]], "/", "\[HBar]c"}], "*", 
    RowBox[{"4", "/", "3"}], "*", 
    RowBox[{"(", 
     RowBox[{"4.0031", "\[Times]", 
      SuperscriptBox["10", "8"]}], ")"}]}], ")"}]], "\[IndentingNewLine]", 
 SqrtBox[
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]], "*", "8.617343", "\[Times]", 
    RowBox[{
     SuperscriptBox["10", 
      RowBox[{"-", "5"}]], "/", "\[HBar]c"}], "*", 
    RowBox[{"4", "/", "3"}], "*", 
    RowBox[{"(", 
     RowBox[{"0.188945282", "\[Times]", 
      SuperscriptBox["10", "8"]}], ")"}]}], ")"}]]}], "Input",
 CellChangeTimes->{{3.4765404575818763`*^9, 3.4765404900825005`*^9}, {
  3.476540525817561*^9, 3.4765405281613564`*^9}, {3.476540568724635*^9, 
  3.4765406197724905`*^9}, {3.4772287264827013`*^9, 3.4772287337328405`*^9}, {
  3.4772287705304213`*^9, 3.4772287840306807`*^9}, {3.477235416501709*^9, 
  3.4772354212830505`*^9}}],

Cell[BoxData["0.015267258596481528`"], "Output",
 CellChangeTimes->{{3.4765404744728255`*^9, 3.4765404908793907`*^9}, 
   3.4765405287082415`*^9, {3.476540604475322*^9, 3.47654062080376*^9}, 
   3.477228784702569*^9, {3.4772354178454847`*^9, 3.4772354222205687`*^9}}],

Cell[BoxData["0.003316888465813123`"], "Output",
 CellChangeTimes->{{3.4765404744728255`*^9, 3.4765404908793907`*^9}, 
   3.4765405287082415`*^9, {3.476540604475322*^9, 3.47654062080376*^9}, 
   3.477228784702569*^9, {3.4772354178454847`*^9, 3.4772354222205687`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1083, 915},
WindowMargins->{{13, Automatic}, {Automatic, 13}},
FrontEndVersion->"6.0 for Linux x86 (32-bit) (June 2, 2008)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[590, 23, 112, 1, 72, "Section"],
Cell[CellGroupData[{
Cell[727, 28, 97, 1, 38, "Subsection"],
Cell[827, 31, 629, 21, 61, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1493, 57, 108, 1, 38, "Subsection"],
Cell[1604, 60, 1041, 32, 96, "Input"],
Cell[2648, 94, 1499, 38, 97, "Input"],
Cell[4150, 134, 506, 16, 63, "Input"],
Cell[4659, 152, 887, 30, 60, "Input"],
Cell[5549, 184, 274, 8, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5860, 197, 105, 1, 38, "Subsection"],
Cell[5968, 200, 587, 17, 28, "Input"],
Cell[CellGroupData[{
Cell[6580, 221, 1959, 59, 120, "Input"],
Cell[8542, 282, 2702, 61, 70, "Output"],
Cell[11247, 345, 1099, 16, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12383, 366, 462, 10, 28, "Input"],
Cell[12848, 378, 2214, 52, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15099, 435, 849, 23, 28, "Input"],
Cell[15951, 460, 9968, 167, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25956, 632, 717, 20, 46, "Input"],
Cell[26676, 654, 2549, 57, 70, "Output"],
Cell[29228, 713, 2548, 57, 70, "Output"]
}, Open  ]],
Cell[31791, 773, 530, 14, 46, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[32370, 793, 110, 1, 42, "Section"],
Cell[CellGroupData[{
Cell[32505, 798, 97, 1, 38, "Subsection"],
Cell[32605, 801, 1810, 47, 232, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[34452, 853, 108, 1, 30, "Subsection"],
Cell[34563, 856, 1727, 56, 63, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[36327, 917, 112, 1, 30, "Subsection"],
Cell[CellGroupData[{
Cell[36464, 922, 2466, 76, 218, "Input"],
Cell[38933, 1000, 465, 11, 70, "Output"],
Cell[39401, 1013, 1187, 33, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[40637, 1052, 99, 1, 30, "Subsection"],
Cell[40739, 1055, 40346, 1057, 3002, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81122, 2117, 104, 1, 38, "Subsection"],
Cell[81229, 2120, 1978, 59, 131, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[83244, 2184, 95, 1, 30, "Subsection"],
Cell[CellGroupData[{
Cell[83364, 2189, 2107, 57, 153, "Input"],
Cell[85474, 2248, 9535, 169, 396, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95046, 2422, 1717, 45, 120, "Input"],
Cell[96766, 2469, 32136, 544, 520, 7950, 146, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[128951, 3019, 107, 1, 38, "Subsection"],
Cell[CellGroupData[{
Cell[129083, 3024, 4240, 122, 233, "Input"],
Cell[133326, 3148, 75261, 1264, 454, 55177, 933, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[208636, 4418, 97, 1, 30, "Subsection"],
Cell[CellGroupData[{
Cell[208758, 4423, 229, 5, 28, "Input"],
Cell[208990, 4430, 210, 4, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209237, 4439, 269, 6, 28, "Input"],
Cell[209509, 4447, 184, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209730, 4455, 239, 5, 28, "Input"],
Cell[209972, 4462, 161, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210170, 4469, 744, 18, 63, "Input"],
Cell[210917, 4489, 354, 5, 28, "Output"],
Cell[211274, 4496, 352, 5, 28, "Output"],
Cell[211629, 4503, 352, 5, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[212030, 4514, 113, 1, 38, "Subsection"],
Cell[CellGroupData[{
Cell[212168, 4519, 1086, 29, 66, "Input"],
Cell[213257, 4550, 267, 3, 28, "Output"],
Cell[213527, 4555, 267, 3, 28, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
